本地通信（ANSI C12.18）
1.	帧格式(PSEM)
帧头标志EE	设备身份	控制字	帧序列号	数据长度	数据域	CRC校验
1字节，固定0xEE	固定0x00	1字节	1字节	2字节		2字节
(1)	设备身份：C12.19固定为0
(2)	控制字:
bit7, 数据多帧标识, 1 or 0, 1表示发送的数据为多帧	bit6, 多帧数据的首帧标识， 1 or 0 	Bit5, 新旧帧触发位, 1->0->1->0这样交替变换，重发数据时bit5的值不变
(3)	帧序列号：多帧传输时，每帧的值为n-1, n-2, …, 0（递减，第一帧为最大值，最后一帧为0）

举例：

※	帧格式除了CRC是LSB顺序，其他都是MSB顺序。
 链路层应答帧 :
Ack = 0x06 收到帧完全正确
Nak = 0x15接收的帧不正确且同时满足以下条件才可能回复Nak，否则不予回复：
1）起始字节不是EE
2）接收到的长度不能小于与帧中Lenth指示的长度
3 ) 没有字符间超时


本地通信流程


3.	协议细节（分层）
4.1	Layer 7 - Application Layer
PSEM服务
本地通信（ANSI C12.18）使用PSEM(Protocol Specifications for Electric Metering)服务和meter通信，在ANSI C12.18中定义了9种服务，每种服务都包含对应的request和response，PSEM使用一个字节的请求/响应code来表示其属于某个具体的服务, 描述如下：
Request (code: 0x20-0x7F)	Response (code: 0x00-0x0A, 参考附录B)
ident	ident-r
read	read-r
write	write-r
logon	logon-r
security	security-r
logoff	logoff-r
negotiate	negotiate-r
wait	wait-r
terminate	terminate-r
每种服务具体解释如下：


每种服务具体解释如下：
1) Identification服务（0x20）
※ Std：参考协议：0x00—ANSI C12.18(光电通信采用此标准);
0x01—保留;
0x02—ANSI C12.21(PSTN采用此标准) ;
0x03—ANSI C12.22(GPRS或以太网采用此标准)

请求（响应）全帧：
帧头标志EE	设备身份	控制字	帧序列号	数据长度	数据域	CRC校验
固定0xEE	固定0x00	1字节	1字节	2字节	0x20/0x00…	2字节
Identification.request数据域只有20
Identification.response数据域：


Send: EE 00 00 00 00 01 20 13 10
Receive: 06 EE 00 00 00 00 05 00 00 01 00 00 C6 B5


Negotiate服务（0x6j）
※  j可为0-B，j=0表示无选择波特率，保持缺省值；j表示HHU提供协商的波特率种数，一般为1，即第一个字节一般为61
※  帧最大字节数: 指从EE开始到CRC校验的字节
※  最大分帧数: 当一个table的内容需要分多次传输时，最大的分帧次数
※  波特率1…波特率j: 每个值对应一种供选择的波特率，00表示外部定义，值的映射关系：
                      01 –> 300 bps
					   02 –> 600 bps
					   03 –> 1200 bps
					   04 –> 2400 bps
					   05 –> 4800 bps
					   06 –> 9600 bps
					   07 –> 14400 bps
					   08 –> 19200 bps
					   09 –> 28800 bps
					   0A –> 57600 bps

请求（响应）全帧：
帧头标志EE	设备身份	控制字	帧序列号	数据长度	数据域	CRC校验
固定0xEE	固定0x00	1字节	1字节	2字节	0x6j/0x00…	2字节
Negotiate.request数据域：
0x6j	帧最大字节数(2byte)	最大分帧数	波特率1…波特率j
61	04 00	80	06
   Negotiate.response数据域：
ok 	帧最大字节数（2个字节）	最大分帧数	协商后波特率（1字节）
00	00 D5	01	06
Send: EE 00 20 00 00 05 61 04 00 80 06 C2 29
Receive: 06 EE 00 20 00 00 05 00 00 D5 01 06 7F D2

 Logon服务（0x50）
请求（响应）全帧：
帧头标志EE	设备身份	控制字	帧序列号	数据长度	数据域	CRC校验
固定0xEE	固定0x00	1字节	1字节	2字节	0x50/0x00…	2字节
Logon.request数据域：
0x50	用户ID码（2个字节）	用户ID信息（10个字节）
50	00 02	41 64 6D 69 6E 69 73 74 72 61
Logon.response数据域：
直接回复00
Send: EE 00 00 00 00 0D 50 00 02 41 64 6D 69 6E 69 73 74 72 61 F9 04
Receive: 06 EE 00 00 00 00 01 00 11 31


4) Read服务（0x3j）
请求（响应）全帧：(0x30全读，0x3F偏移读)
帧头标志EE	设备身份	控制字	帧序列号	数据长度	数据域	CRC校验
固定0xEE	固定0x00	1字节	1字节	2字节	0x30(0x3F)/0x00…	2字节
  Read.request数据域（全读&返回单帧）:
0x30	TableID（2个字节），类似于OBIS code
30	00 00
Read.response数据域（返回单帧）：
OK	Count（2个字节）,数据字节数	Data	Data的累加校验和 （取反），一个字节
00	00 30	03 0A 88 48 45 43 4F 02 00 19 19 01 00 0A 02 02 03 01 00 EF B9 E1 9F 03 1E F8 E0 81 19 FF 1B C8 07 00 00 00 E0 A0 40 00 02 24 60 60 00 0A C0 03	EE
Send: EE 00 00 00 00 03 30 00 00 DC 1C
Receive: 06 EE 00 00 00 00 34 00 00 30 03 0A 88 48 45 43 4F 02 00 19 19 01 00 0A 02 02 03 01 00 EF B9 E1 9F 03 1E F8 E0 81 19 FF 1B C8 07 00 00 00 E0 A0 40 00 02 24 60 60 00 0A C0 03 EE 8B 5E

4) Read服务（0x3j）
请求（响应）全帧：(0x30全读，0x3F偏移读)
帧头标志EE	设备身份	控制字	帧序列号	数据长度	数据域	CRC校验
固定0xEE	固定0x00	1字节	1字节	2字节	0x30(0x3F)/0x00…	2字节
  Read.request数据域（全读&返回单帧）:
0x30	TableID（2个字节），类似于OBIS code
30	00 00
Read.response数据域（返回单帧）：
OK	Count（2个字节）,数据字节数	Data	Data的累加校验和 （取反），一个字节
00	00 30	03 0A 88 48 45 43 4F 02 00 19 19 01 00 0A 02 02 03 01 00 EF B9 E1 9F 03 1E F8 E0 81 19 FF 1B C8 07 00 00 00 E0 A0 40 00 02 24 60 60 00 0A C0 03	EE
Send: EE 00 00 00 00 03 30 00 00 DC 1C
Receive: 06 EE 00 00 00 00 34 00 00 30 03 0A 88 48 45 43 4F 02 00 19 19 01 00 0A 02 02 03 01 00 EF B9 E1 9F 03 1E F8 E0 81 19 FF 1B C8 07 00 00 00 E0 A0 40 00 02 24 60 60 00 0A C0 03 EE 8B 5E


Read.request数据域（偏移读&返回单帧）:
3F	TableID（2个字节）	偏移地址（3个字节）	Count（2字节），读取字节数
3F	00 21	00 00 03	00 01
   Read.response数据域（返回单帧）：
OK	Count（2个字节）,数据字节数	Data	Data的累加校验和，一个字节
00	00 01	0A	F6
Send: EE 00 00 00 00 08 3F 00 21 00 00 03 00 01 3C 74
Receive: 06 EE 00 00 00 00 05 00 00 01 0A F6 0F DA


Read.request数据域（偏移读&返回多帧 ）:
   Read.response数据域（返回多帧）：


Write服务（0x4j）
请求（响应）全帧：(0x40全写 ，0x4F偏移写)
帧头标志EE	设备身份	控制字	帧序列号	数据长度	数据域	CRC校验
固定0xEE	固定0x00	1字节	1字节	2字节	0x40(0x4F)/0x00…	2字节

Write.request数据域：
40	Tableid（2个字节）	Count（2个字节）,数据字节数	Data	Data的累加校验和，一个字节

Write.request数据域：
0x4F	TableID（2个字节）	偏移地址（3个字节）	Count（2个字节）,数据字节数	Data	Data的累加校验和，一个字节
4F	00 21	00 00 03	00 01	0A	F6
Write.response数据域：
数据域为ok或者Nok
Send: EE 00 00 00 00 0A 4F 00 21 00 00 03 00 01 0A F6 91 CE
Receive: 06 EE 00 00 00 00 01 00 11 31

 Security服务（0x51）
请求（响应）全帧：
帧头标志EE	设备身份	控制字	帧序列号	数据长度	数据域	CRC校验
固定0xEE	固定0x00	1字节	1字节	2字节	0x51/0x00…	2字节
Security.request数据域：
0x51	密码（20个字节）
51	4D 41 4E 41 47 45 52 20 20 20 20 20 20 20 20 20 20 20 20 20
Security.response数据域：
直接回复ok(00)或者nok
Send: EE 00 20 00 00 15 51 4D 41 4E 41 47 45 52 20 20 20 20 20 20 20 20 20 20 20 20 20 1C FD
Receive: 06 EE 00 20 00 00 01 00 80 51

Wait服务（0x70）
请求（响应）全帧：
帧头标志EE	设备身份	控制字	帧序列号	数据长度	数据域	CRC校验
固定0xEE	固定0x00	1字节	1字节	2字节	0x70/0x00…	2字节
wait.request数据域：
0x70	临时会话超时时间（1个字节，s为单位）
70	0A
Security.response数据域：
直接回复ok(00)或者nok

8) Terminate服务（0x21）
Terminate.request的数据域只有21
Terminate.response数据域只有1个字节，err或ok
Send: EE 00 20 00 00 01 21 0B 61
Receive: 06 EE 00 20 00 00 01 00 80 51


9) Logoff服务（0x52）
Logoff.request的数据域只有52。
Logoff.response数据域只有1个字节，err或bsy或isss或ok
Send: EE 00 00 00 00 03 30 00 52 4B 6D
Receive: 06 EE 00 00 00 00 01 05 BC 66 06 EE 00 00 00 00 01 05 BC 66


执行过程服务（Write服务）
执行过程是通过写标准表“ST_07(0x0007)发起过程执行表”来执行的，参考ST_07的表结构，构造如下格式：

00 07（标准过程） +  数据字节数 + 执行表定义（自定义/标准表名）+ 执行命令的序列号（SEQ_NBR） + 过程参数

执行标准过程的时候：
执行自定义过程的时候：
例如：

执行自定义表，MP_8(0x0808)，传输imageBlock：
格式：
00 07（标准过程） +  数据字节数 +  08 08（MP_8，传输imageBlock表） + SEQ_NBR（ 执行命令的序列号）+ 过程参数（BLOCK NUMBER +VALUE）
数据：
0007 00C7 0808 00 00000000

执行自定义表，MP_10(0x080A)，秒脉冲输出开启或关闭：
格式：
00 07（标准过程） +  数据字节数 +  08 08（MP_8，传输imageBlock表） + SEQ_NBR（ 执行命令的序列号）+ 过程参数（BLOCK NUMBER +VALUE）
数据：
0007 0004 080A 00 01//开启
0007 0004 080A 00 00//关闭


典型的通信过程：
Send: EE 00 00 00 00 01 20 13 10 //identification
Send: EE 00 20 00 00 05 61 04 00 80 06 C2 29 //negotiation
Send: EE 00 00 00 00 0D 50 00 02 41 64 6D 69 6E 69 73 74 72 61 F9 04 //logon
Send: EE 00 20 00 00 15 51 4D 41 4E 41 47 45 52 20 20 20 20 20 20 20 20 20 20 20 20 20 1C FD //security
Send: EE 00 00 00 00 03 30 00 36 69 48 //full read
Send: EE 00 20 00 00 01 21 0B 61 //terminate


5. 本地通信举例
5.1 读取基本参数
   table0（基本配置表）， table1（厂商标识表）， table5（表计标识表）

5.2 读取错误或告警状态字
   table3（状态表）

5.3 读取当前电量，最大需量
   table12（寄存器标识表）， table16（数据源定义表），
table21（寄存器限制定义表），
table22（电量&最大需量数据选择表）， table23（最大需量清零次数，电量，最大需量&连续累计需量）

例如：
现在table12中有53个不同类型的寄存器（A+,A-,R+,R-,……）
table16定义了53个寄存器的相关配置（如下53个U8，对于53个寄存器的配置）：
01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 03 03 03 03 00 00 00 00 00 00 01 03 03 03 03 00 00 00 00 00 00
table21中定义了要选择的电量寄存器和需量寄存器的数量，根据如下数据我们得到电量的数量为10，需量的数量为4；
1F 00 32 0A 04 00 01 04 04 17
0A //10个电量
04 //4个需量
01 //发生次数为1
04 //4个tariff
table22中选择了部分（table21中定义的电量寄存器和需量寄存器的数量）table16中定义的数据源（如下数据的前10个字节表示table16中电量寄存器的索引，后4个字节为table16中需量寄存器的索引，由于table16中的索引和table12中的索引一一对应，所以就可以从table12中找到对应电量和需量标识）：
00 01 02 03 04 05 06 07 08 09 20 21 22 23 FF
0x00 ->正向有功总电量
0x01 ->反向有功总电量
0x02 ->绝对有功总电量
0x03 ->网络有功总电量
0x04 –>正向无功总电量
0x05 ->反向无功总电量
0x06 ->I 象限无功总电量
0x07 ->II 象限无功总电量
0x08 –>III象限无功总电量
0x09 –>IV 象限无功总电量
0x20 –>正向有功最大需量
0x21 ->反向有功最大需量
0x22 ->绝对有功最大需量
0x23 ->网络有功最大需量
Table23的捕获数据为：
00 00 00 0B 0E 00 00 00 32 00 00 0B 40 00 00 0A DC 00 00 12 FC 00 00 00 00 00 00 12 F2 00 00 00 0A 00 00 00 00 00 00 00 00 0D 01 01 0C 3A 00 00 00 00 00 00 06 A8 00 00 00 00 00 00 00 00 00 00 00 00 00 0D 01 01 0C 3A 00 00 00 00 00 00 06 A8 0D 01 01 0C 3A 00 00 00 00 00 00 06 A8 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0B 0E 00 00 00 32 00 00 0B 40 00 00 0A DC 00 00 12 FC 00 00 00 00 00 00 12 F2 00 00 00 0A 00 00 00 00 00 00 00 00 0D 01 01 0C 3A 00 00 00 00 00 00 06 A8 00 00 00 00 00 00 00 00 00 00 00 00 00 0D 01 01 0C 3A 00 00 00 00 00 00 06 A8 0D 01 01 0C 3A 00 00 00 00 00 00 06 A8 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
解析如下：
00 //最大需量清零次数
//总的需量和电量：
00 00 0B 0E //正向有功总电量值，2830wh
00 00 00 32 //反向有功总电量值，50wh
00 00 0B 40 //绝对有功总电量值, 2880wh
00 00 0A DC //网络有功总电量值, 2780wh
00 00 12 FC //正向无功总电量值, 4860varh
00 00 00 00 //反向无功总电量值, 0varh
00 00 12 F2 //I 象限无功总电量值, 4850varh
00 00 00 0A //II 象限无功总电量值, 10varh
00 00 00 00 //III象限无功总电量值, 0varh
00 00 00 00 //IV 象限无功总电量值, 0varh
0D 01 01 0C 3A //正向有功需量记录时间：2014-1-1 12:58
00 00 00 00 //正向有功连续累计需量, 0wh
00 00 06 A8 //正向有功最大需量, 1704wh
00 00 00 00 00 //反向有功需量记录时间：0-0-0 00:00
00 00 00 00//反向有功连续累计需量, 0wh
00 00 00 00 //反向有功最大需量, 0wh
0D 01 01 0C 3A //绝对有功需量记录时间：2014-1-1 12:58
00 00 00 00 //绝对有功连续累计需量, 0wh
00 00 06 A8 //绝对有功最大需量, 1704wh
0D 01 01 0C 3A //网络有功需量记录时间：2014-1-1 12:58
00 00 00 00 //网络有功连续累计需量, 0wh
00 00 06 A8 //网络有功最大需量, 1704wh
//tariff-1的电量和需量：（格式同上）
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
//tariff-2的电量和需量：（格式同上）
00 00 0B 0E 00 00 00 32 00 00 0B 40 00 00 0A DC 00 00 12 FC 00 00 00 00 00 00 12 F2 00 00 00 0A 00 00 00 00 00 00 00 00 0D 01 01 0C 3A 00 00 00 00 00 00 06 A8 00 00 00 00 00 00 00 00 00 00 00 00 00 0D 01 01 0C 3A 00 00 00 00 00 00 06 A8 0D 01 01 0C 3A 00 00 00 00 00 00 06 A8
//tariff-3的电量和需量：（格式同上）
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
//tariff-4的需量和电量：（格式同上）
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00

5.4 结算数据：
   table12（寄存器标识表）， table16（数据源定义表），
table21（寄存器限制定义表），
table22（电量&最大需量数据选择表），
table24 （上一季节冻结数据（最大需量清零次数、电量、最大需量及累计需量））
table25（上次需量清零时的冻结数据（最大需量清零次数、电量、最大需量及累计需量））
table26（冻结数据（最大需量清零次数，电量，最大需量&连续累计需量））

例如:
table21的捕获数据为：
1F 00 32 0A 04 00 01 04 04 17
解析：
		1F // 寄存器功能标志1，为00011111
          Bit6为0，表计是不提供需量当前周期剩余时间；
          Bit5为0，表计没有连续累计需量功能；
          Bit4为1，表计有累计需量功能；
          Bit3为1，表计有锁住需量复位（禁止需量复位）的功能；
          Bit2为1，表计记录需量复位次数；
          Bit1为1，表计在类2的table中提供日期时间 ；
          Bit0为1，表计在类2的table中提供当前所在的季节；
00 // 寄存器功能标志2
32 // 表计支持的冻结记录条数，50条
0A // 数据块中电量寄存器的个数，10个
04 // 数据块中需量寄存器的个数
00 // 数据块中coincident values(需量超限发生时的值)的个数
01 // 一个结算周期最大需量发生的次数
04 // 费率数
04 // 当前需量寄存器的个数，4个
17 // 实时量寄存器的个数，23个

table22的捕获数据为：
00 01 02 03 04 05 06 07 08 09 20 21 22 23 FF
解析：
		00 01 02 03 04 05 06 07 08 09 //表示table16中的索引，对应table12中电量索引；
      20 21 22 23 //表示table16中的索引，对应table12中需量索引；
      FF //flag值，表示对应bit位的需量是最大值还是最小值的，为0表示最小值，为1表示最大值；
table26的捕获数据为：
太大了，具体格式可参考标准table表定义

5.5 实时量：
   table12（寄存器标识表）， table16（数据源定义表），
table21（寄存器限制定义表），
table27（实时量数据选择表）， table28（实时量数据）

根据table21的数据，我们得到实时需量数为4个，实时电量数为23个：
1F 00 32 0A 04 00 01 04 04 17
table27中定义了从table16中选择的电量和需量的数据源，根据table21表中电量和需量的个数， 假设我们得到如下table27的数据：
2B 2C 2D 2E 0A 0B 0C 0D 0E 0F 10 11 12 13 14 15 16 17 18 19 1A 1B 1C 1D 1E 1F 2A
那么根据table27的定义，可得：
需量的索引（在table16中）为：2B 2C 2D 2E
电量的索引（在table16中）为：0A 0B 0C 0D 0E 0F 10 11 12 13 14 15 16 17 18 19 1A 1B 1C 1D 1E 1F 2A
0x2B ->（43）当前正向有功需量
0x2C ->（44）当前反向有功需量
0x2D ->（45）当前绝对有功需量
0x2E ->（46）当前网络有功需量
0x0A ->A相总有功功率
0x0B ->B相总有功功率
0x0C ->C相总有功功率
0x0D ->总有功功率
0x0E ->总无功功率
0x0F ->总视在功率
0x10 ->A相电流有效值
0x11 ->B相电流有效值
0x12 ->C相电流有效值
0x13 ->A相电压有效值
0x14 ->B相电压有效值
0x15 ->C相电压有效值
0x16 ->总功率因数
0x17 ->A相功率因数
0x18 ->B相功率因数
0x19 ->C相功率因数
0x1A ->电网频率
0x1B ->A相角
0x1C ->B相角
0x1D ->C相角
0x1E ->BA相功率角
0x1F ->CA相功率角
0x2A ->环境温度

table28读出的值为：
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 54 FE 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 13 8B 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 1C
解析：int类型（具体的配置可参考table0“格式类型2”字段，该字段bit6~7定义了数据类型），4bytes为一组值，对应table27中每一个实时量的值。

5.5 实时量：
   table12（寄存器标识表）， table16（数据源定义表），
table21（寄存器限制定义表），
table27（实时量数据选择表）， table28（实时量数据）

根据table21的数据，我们得到实时需量数为4个，实时电量数为23个：
1F 00 32 0A 04 00 01 04 04 17
table27中定义了从table16中选择的电量和需量的数据源，根据table21表中电量和需量的个数， 假设我们得到如下table27的数据：
2B 2C 2D 2E 0A 0B 0C 0D 0E 0F 10 11 12 13 14 15 16 17 18 19 1A 1B 1C 1D 1E 1F 2A
那么根据table27的定义，可得：
需量的索引（在table16中）为：2B 2C 2D 2E
电量的索引（在table16中）为：0A 0B 0C 0D 0E 0F 10 11 12 13 14 15 16 17 18 19 1A 1B 1C 1D 1E 1F 2A
0x2B ->（43）当前正向有功需量
0x2C ->（44）当前反向有功需量
0x2D ->（45）当前绝对有功需量
0x2E ->（46）当前网络有功需量
0x0A ->A相总有功功率
0x0B ->B相总有功功率
0x0C ->C相总有功功率
0x0D ->总有功功率
0x0E ->总无功功率
0x0F ->总视在功率
0x10 ->A相电流有效值
0x11 ->B相电流有效值
0x12 ->C相电流有效值
0x13 ->A相电压有效值
0x14 ->B相电压有效值
0x15 ->C相电压有效值
0x16 ->总功率因数
0x17 ->A相功率因数
0x18 ->B相功率因数
0x19 ->C相功率因数
0x1A ->电网频率
0x1B ->A相角
0x1C ->B相角
0x1D ->C相角
0x1E ->BA相功率角
0x1F ->CA相功率角
0x2A ->环境温度

table28读出的值为：
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 54 FE 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 13 8B 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 1C
解析：int类型（具体的配置可参考table0“格式类型2”字段，该字段bit6~7定义了数据类型），4bytes为一组值，对应table27中每一个实时量的值。

5.6 显示：
   table31（显示项配置）， table32（显示源表）， table33（显示模式配置）

   例如：
   table31（显示项配置）读取的数据为：
01 00 5B 02 00 96 03 00 00 00
分析：
01 ：显示控制，bit0为1表示每一个显示项的显示持续时间可编程
00 5B ：可供选择的显示项数, 91条
02 ：显示项ID的字节数
00 96 ：primary最大显示项数，150条
03 ：primary最大显示页数
00 00 ：secondary最大显示项数
00：secondary最大显示页数

table32（显示源）读取的数据为：
00 01 00 02 00 03 00 04 00 05 00 06 00 07 00 08 00 09 00 0A 00 0B 00 0C 00 0D 00 0E 00 0F 00 10 00 11 00 12 00 13 00 14 00 15 00 16 00 17 00 18 00 19 00 1A 00 1B 00 1C 00 1D 00 1E 00 1F 00 20 00 21 00 22 00 23 00 24 00 25 00 26 00 27 00 28 00 29 00 2A 00 2B 00 2C 00 2D 00 2E 00 2F 00 30 00 31 00 32 00 33 00 34 00 35 00 36 00 37 00 38 00 39 00 3A 00 3B 00 3C 00 3D 00 3E 00 3F 00 40 00 41 00 42 00 43 00 44 00 45 00 46 00 47 00 48 00 49 00 4A 00 4B 00 4C 00 4D 00 4E 00 4F 00 50 00 51 00 52 00 53 00 54 00 55 00 56 00 57 00 58 00 59 00 5A 00 5B
上面数据格式为“N（由table31可知此处N为91）* U16”，可参考第一行。

table33（显示模式配置）读取的数据为：
0A 10 32 0A 20 32 0F 30 32 00 03 00 05 00 06 00 0E 00 11 00 12 00 13 00 14 00 15 00 16 00 17 00 23 00 2D 00 2E 00 34 00 3C 00 4A 00 4C 00 4D 00 54 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF 00 03 00 05 00 06 00 0E 00 11 00 12 00 13 00 14 00 15 00 16 00 17 00 23 00 2D 00 2E 00 34 00 3C 00 4A 00 4C 00 4D 00 54 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF 00 01 00 02 00 03 00 04 00 05 00 06 00 07 00 08 00 09 00 0A 00 0B 00 0C 00 0D 00 0E 00 11 00 12 00 13 00 14 00 15 00 16 00 17 00 23 00 3C 00 4A 00 4C 00 4D 00 54 00 2D 00 2E 00 30 00 31 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF
解析: （格式为）：
====================================================
Normal模式的配置（3bytes）+Alternate模式的配置（3bytes）+Test模式的配置（3bytes）
Normal 模式的显示项（N*2bytes） +Normal 模式的显示项（N*2bytes）+ Test 模式的显示项（N*2bytes），N为显示项个数。
====================================================
0A 10 32 // 0x0A为显示持续时间10s；轮显间隔时间这里没有设置，默认3s；0x10表示Normal模式；0x32表示显示项个数，即50条
0A 20 32 // 0x0A为显示持续时间10s；轮显间隔时间这里没有设置，默认3s；0x20表示Alternate模式；0x32表示显示项个数，即50条
0F 30 32  // 0x0F为显示持续时间15s；轮显间隔时间这里没有设置，默认3s；0x30表示Test模式；0x32表示显示项个数，即50条
00 03 00 05 00 06 00 0E 00 11 00 12 00 13 00 14 00 15 00 16 00 17 00 23 00 2D 00 2E 00 34 00 3C 00 4A 00 4C 00 4D 00 54 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF //Normal模式显示项ID（类似OBIS code，2bytes一组）
00 03 00 05 00 06 00 0E 00 11 00 12 00 13 00 14 00 15 00 16 00 17 00 23 00 2D 00 2E 00 34 00 3C 00 4A 00 4C 00 4D 00 54 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF //Alternate模式显示项ID（类似OBIS code，2bytes一组）
00 01 00 02 00 03 00 04 00 05 00 06 00 07 00 08 00 09 00 0A 00 0B 00 0C 00 0D 00 0E 00 11 00 12 00 13 00 14 00 15 00 16 00 17 00 23 00 3C 00 4A 00 4C 00 4D 00 54 00 2D 00 2E 00 30 00 31 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF //Test模式显示项ID（类似OBIS code，2bytes一组）

5.7 费率（TOU）:
   table50（费率限制表），table51（费率实际配置表）， table52（时钟）， table54（日历表费率（tariff配置表）），table55（时钟状态）

   例如：
table51读取的数据为：
00 00 14 00 28 00 32 01 1E
分析：
14 –>日历功能 (Bit7-bit4: 最大节假日类型，Bit3-bit0：最大季节数)，14为10100，所以season数为2 ，节假日类型为1
00 –>非周期性执行日期的个数， 0个
28 ->周期性执行日期的个数，40个
00 32 ->支持的最大费率数，50个
01 1E ->通信时，ST_54的最大字节数，286个字节

Table54读出的数据为：

由于上表（table51）中“事件功能1”bit5（anchor date）固定为0，故table54的“固定日期”不使用
由于上表（table51）中“非周期性执行日期个数”为0，故table54的“非周期性执行日期操作”字段不使用
08 03 01 //周期性执行日期操作（3bytes），2字节RDATE+1字节CALENDAR_ACTION，
CALENDAR_ACTION为000000001，bit0-4为0001，表示切换到夏令时；bit5为0，表示不执行需量清零；bit6为0，表示不执行冻结；
            RDATE为100000000011，根据RDATE的结构：

可得，bit0-3为0011，即MONTH=3月；
                  bit4-7为0000，即OFFSET=0
                  bit8-10为000，即WEEKDAY=0
                  bit11-15位0001，即DAY=1
            故而可得日期为3月1日，进入夏令时
08 0A 02 //周期性执行日期操作（3bytes），2字节RDATE+1字节CALENDAR_ACTION，
CALENDAR_ACTION为000000010，bit0-4为0010，表示退出夏令时；bit5为0，表示不执行需量清零；bit6为0，表示不执行冻结；
            RDATE为100000001010，根据RDATE的结构：

可得，bit0-3为1010，即MONTH=10月；
                  bit4-7为0000，即OFFSET=0
                  bit8-10为000，即WEEKDAY=0
                  bit11-15位0001，即DAY=1
            故而可得日期为10月1日，退出夏令时
08 01 03 //周期性执行日期操作（3bytes），2字节RDATE+1字节CALENDAR_ACTION，
CALENDAR_ACTION为000000011，bit0-4为0011，表示选择季节表0；bit5为0，表示不执行需量清零；bit6为0，表示不执行冻结；
            RDATE为100000000001，根据RDATE的结构：

            可得，bit0-3为0001，即MONTH=1月；
                  bit4-7为0000，即OFFSET=0
                  bit8-10为000，即WEEKDAY=0
                  bit11-15位0001，即DAY=1
            故而可得日期为1月1日，选择季节表0

※	第1个和第2个RECURR_DATE分别为每年夏日制的起始日期和每年夏日制的结束日期（当表计不支持时，用FFFFFF补齐）， 第3个到第(3+最大季节数)个RECURR_DATE开始为季节切换的定义， 支持的最大季节数为6(实际使用4个)， 支持3个一般节假日，实际使用不足最大季节数时补齐FFFFFF，第(3+最大季节数+1)个RECURR_DATE开始为一般节假日，字节不足NBR_RECURR_DATES*3字节补FFFFFF（注意，写操作时需计算好字节数补齐FF)
例如：
RDRDCA(夏日制起始日期)
RDRDCA(夏日制结束日期)
RDRDCA(第1个切换季节起始日期)
RDRDCA(第2个切换季节起始日期)
RDRDCA(第3个切换季节起始日期)
RDRDCA(第4个切换季节起始日期)
FFFFFF
FFFFFF
RDRDCA(第1个一般节假日)
RDRDCA(第2个一般节假日)
RDRDCA(第3个一般节假日)
FFFFFF
…
FF FF FF
FF FF FF
……
FF FF FF
88 08 00 // 日时段定义（3bytes），2字节TIER_SWITCH+1字节DAY_SCH_NUM，
              其中TIER_SWITCH为时段定义，值为1000100000001000，定义如下：
bit15-bit11为10001，表示该时段的小时值为17点；
bit10-bit5: 表示该时段的分钟值为0分；
bit4：为0，此费率不指定给需量；
bit3: 为1，此费率指定给计量；
              bit2-bit0: 为0，表示费率号0；
              另外DAY_SCH_NUM为0，表示day0；
              故而可得时间配置17:00，tariff0，day0

B8 09 00 // 日时段定义（3bytes），2字节TIER_SWITCH+1字节DAY_SCH_NUM，
              其中TIER_SWITCH为时段定义，值为1011100000001001，定义如下：
bit15-bit11为10001，表示该时段的小时值为23点；
bit10-bit5: 表示该时段的分钟值为0分；
bit4：为0，此费率不指定给需量；
bit3: 为1，此费率指定给计量；
              bit2-bit0: 为0，表示费率号1；
另外DAY_SCH_NUM为0，表示day0；
              故而可得时间配置23:00，tariff1，day0

FF FF FF
FF FF FF
FF FF FF
FF FF FF
FF FF FF
……
00 00 00 00 //最大日时段数，这个字段的长度由table51（费率实际配置表）“时间功能2”的bit1（是否支持五个工作日使用不同的日表）来决定，由前面数据可知bit1为0，所以这里不支持五个工作日使用不同的日表，所以该字段的结构为：
TYPE WEEKDAYS_SCHEDULE_RCD = PACKED RECORD
                    SATURDAY_SCHEDULE : UINT8; 周六对应的日表索引， 为00，周六对应的日表为day0
                        SUNDAY_SCHEDULE : UINT8; 周日对应的日表索引， 为00，周日对应的日表为day0
                        WORKDAY_SCHEDULE : UINT8; 工作日对应的日表索引， 为00，工作日对应的日表为day0
                        SPECIAL_SCHEDULE : ARRAY[ACT_TIME_TOU_TBL.NBR_SPECIAL_SCHED] OF UINT8; 各类型节假日对应的日表索引，位00，节假日对应的日表day0
                 故而得：
                      Season0的配置为
                      Saturday  day0
                      Sunday    day0
                      Workday  day0
                      Holiday   day0
※	从这里的配置可知，ANSI的tariff配置和DLMS不一样，这里只有season table和day table，没有week table，
FF FF FF FF
FF FF FF FF
FF FF FF FF

table55捕获的数据：
0D 01 03 0C 18 02 04 0F 39
解析：
0D 01 03 0C 18 02 // YYMMDDHHmmss, 13-1-3 12:24:02
04 // 00000100, bit3为1表示表计当前处于夏日制
0F 39 // 0000 1111 0011 1001，
（由于table51中“时间功能2”的bit2为0，不支持对电量和需量分别按不同费率计量）
Bit2-bit0为1，表示当前费率为1
Bit3-bit5为111，但是保留不用
Bit7-bit6为00，
Bit11-bit8为1111，为15表示没有使用特殊日类型
Bit15-bit12为000，表示Season0


5.8 负荷（load profile）
   ->读load profile：
      table61（负荷实际限制表），table62（负荷控制表（负荷捕获对象）），table63（负荷曲线状态）， table64（profile (set)1的符合数据）
   ->写load profile参数：
      操作table16（数据源定义表）），table61（负荷实际限制表），table62（负荷控制表（负荷捕获对象））
      然后执行过程16，启动符合记录；

   例如：
table61（负荷实际限制表）读出的内容：
00 03 C0 00 00 00 40 00 3C 00 60 08 0F
解析：
00 03 C0 00：存储容量大小245760
00 00：负荷记录参数内容标识
40：负荷记录格式（bit6:INV_NI_FMAT1_FLAG）
负荷集1：
00 3C：负荷集1中可记录的block数，60个block
00 60：负荷集1中1个block记录的条数，96条
08：负荷集1中寄存器个数，8个
0F：负荷集1中记录的间隔时间，15分钟

table62（负荷控制表（负荷捕获对象））读出的内容：
00 02 FF 00 04 FF 00 05 FF 00 0D FF 00 16 FF 00 1A FF 00 22 FF 00 2A FF 40
解析：
00 02 FF ：00为固定值，02位table12中寄存器索引，FF为固定值
00 04 FF ：同上
00 05 FF ：同上
00 0D FF ：同上
00 16 FF ：同上
00 1A FF ：同上
00 22 FF ：同上
00 2A FF ：同上
40：表示数据格式，0x40为1000000，bit6表示“64 NI_FMAT1”即U64

table63（负荷曲线状态）读出的内容：
25 00 02 00 02 00 00 00 02 00 00 00 3D
解析：
25 : 负荷记录状态标识
00 02 : Profile set1的发生负荷记录的块数
00 02 : 最新的负荷记录元素
00 00 00 02: 最新的负荷记录块序号
00 00 : 未读的负荷记录块个数
00 3D: 最新block内有效的记录条数

table64（profile (set)1的数据）读出的内容：
测试数据量太大，没有捕获具体数据，每条记录的如下：
YYMMDDHHmm（5字节时间） +
第1个捕获对象的记录 + 第2个捕获对象的记录 + …… + 第m个捕获对象的记录 +
捕获对象记录的状态（n bits，和m个捕获对象一一对应，0为无效，1为有效）

5.9 事件：
table70（事件限制表（记录信息参数））， table71（事件实际配置表（实际记录信息参数）），
table72（事件标识表），table73（历史事件控制表）， table75（标准事件控制表）
->读取事件的流程如下：
table71（事件实际配置表）， table74（历史事件数据表），table76（标准事件数据表）
->设置事件的流程如下：
Table73（历史事件控制表），table75（标准事件控制表）

例如：
table71（事件实际配置表）捕获数据：
06 07 01 02 02 02 00 02 00
解析：
06 ：记录标识
07  ：标准事件条数
01  ：厂商事件条数
02  ：历史数据长度
02  ：事件数据长度
02 00  ：历史数据记录条数
02 00 ：事件数据记录条数

table72（事件标识表）捕获数据：
1E 0F 35 0F E3 1F 00 00
解析：
1E 0F 35 0F E3 1F 00 ：支持的标准事件（每个字节表示C12.19标准文档中附录B中定义的event code）
   解析：
   0x1E ：Metering mode started
0x0F ：Update List Pointers
0x35 ：Added to remaining credit
0x0F ：Update List Pointers
0xE3 ：记录标识
0x1F ：Metering mode stopped
0x00 ：记录标识
00：No Event

table74（历史事件数据表）捕获数据：
无法读，没权限

Table75（标准事件数据表）捕获数据：
1E 0F 35 0F E3 1F 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
解析：
1E 0F 35 0F E3 1F
00
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00


5.10 执行操作：
所有的执行操作均采用调用table 7来执行过程的方式，如遇到标准中没有定义的过程，则需要厂家自定义过程。

5.11 权限控制：
table41（实际安全限制表）， table42（密码及密码权限表）
table43（默认访问控制表）， table44（自定义访问控制表）

收到读写请求时，先判定该table或过程是否有控制权限，如果有则现在自定义访问表（table44）中找是否有该表权限的定义，如果table44中没有找到则在table43（默认访问控制表）中继续，如果还没有那就返回错误。

自定义权限的table有table41-table44；默认table有table1,table3、table11、table12、table16、table21、table22、table23、table31、table32、table33，默认的过程有过程0和过程1：

table42捕获的数据：
4D 41 4E 41 47 45 52 20 20 20 20 20 20 20 20 20 20 20 20 20 07 52 45 41 44 45 52 20 20 20 20 20 20 20 20 20 20 20 20 20 20 03 43 55 4D 53 54 4F 4D 45 52 20 20 20 20 20 20 20 20 20 20 20 01
解析:
4D 41 4E 41 47 45 52 20 20 20 20 20 20 20 20 20 20 20 20 20 //密码1
07 //Bit7-bit0：对应Group7-Group0，密码1放开group0，1,2的访问权限
52 45 41 44 45 52 20 20 20 20 20 20 20 20 20 20 20 20 20 20 //密码2
03 // Bit7-bit0：对应Group7-Group0，密码2放开group0,1的访问权限
43 55 4D 53 54 4F 4D 45 52 20 20 20 20 20 20 20 20 20 20 20 //密码3
01 // Bit7-bit0：对应Group7-Group0，密码3放开group0的访问权限

table44捕获的数据：
20 00 07 04 20 01 07 04 20 02 07 04 20 03 07 04 20 05 07 04 00 29 04 04 00 2A 04 04 00 2B 04 04 00 2C 04 04 08 01 04 04 08 06 04 04 08 07 04 04 08 08 04 04
解析:
20 00 07 04 ：ST_0，任何客户端都可读，（ group0,1,2可读），group2可写
20 01 07 04 ：ST_1，任何客户端都可读，（group0,1,2可读），group2可写
20 02 07 04 ：ST_2，任何客户端都可读，（group0,1,2可读），group2可写
20 03 07 04 ：ST_3，任何客户端都可读，（group0,1,2可读），group2可写
20 05 07 04 ：ST_4，任何客户端都可读，（group0,1,2可读），group2可写
00 29 04 04 ：ST_41，group2可读，group2可写
00 2A 04 04 ：ST_42，group2可读，group2可写
00 2B 04 04 ：ST_43，group2可读，group2可写
00 2C 04 04 ：ST_44，group2可读，group2可写
08 01 04 04 ：MT_1，group2可读，group2可写
08 06 04 04：MT_6，group2可读，group2可写
08 07 04 04 ：MT_7，group2可读，group2可写
08 08 04 04：MT_8，group2可读，group2可写

权限控制如下：
密码（1,2,…,n）
group0	group1	……	group7
可读	可写	可读	可写	可读	可写	可读	可写
table 1
……
table n	table 1
……
table n	table 1
……
table n	table 1
……
table n	table 1
……
table n	table 1
……
table n	table 1
……
table n	table 1
……
table n


附录A：语义解释
表A1	语义解释
名称	值(16进制)	备注
Ok	00	没有错误
Std	00	00=ANSI C12.18；01=加拿大工业用标准
Ver	01	版本号，默认02
Rev	00	版本号，默认00
Rsvd	00	保留
Ack	06	正确接收
Nak	15	拒绝接收

附录B：本地通信响应代码
名称	值(16进制)	备注
Ok	00	请求成功
Err	01	服务拒绝
Sns	02	服务不支持
Isc	03	权限不够
Onp	04	数据无效
Iar	05	非法请求
Bsy	06	费率装置忙
Dnr	07	费率装置未就绪
Dlk	08	数据被冻结，无法索取
Mo	09	需重新握手或登录
Isss	0A	不存在该服务


远程通信（ANSI C12.22）
1.	帧格式（ACSE+EPSEM）
ACSE PDU
EPSEM service:
EPSEM payload:
<epsem-control>  +  [<ed-class>]  +  <epsem-data>+| 00H


Byte7	Byte6	Byte5	Byte4	Byte3	Byte2	Byte1	Byte0
Reserved	Recovery session	Proxy service used	Ed class included	Security mode	Response control
always 1		0 = This message not though a proxy C12.22 Relay
1 = This message though a proxy C12.22 Relay	True =>
Ed-class is included
False =>
Ed-class is not included	0 = Cleartext
1 = Cleartext with authentication
2 = Ciphertext with authentication	0 = Always respond
1 = Respond on exception
2 = Never respond
	Byte4, <ed-class>: shall be included in all unsolicited messages and one-way messages.

<epsem-control>: 是一个字节的控制字, 含义如下
Bit 7: Reserved, 长为1
	Bit 6: RECOVERY_SESSION
	Bit 5: PROXY_SERVICE_USED
	Bit 4: ED_CLASS_INCLUDED
	Bit 2-3: SECURITY_MODE
		0 = 明文传送数据
		1 = 明文+认证传送数据
		2 = 密文+认证传送数据
	Bit 0-1: RESPONSE_CONTROL
		0 = 一直响应
		1 = 异常时响应
		2 = 不响应
	[<ed-class>]: 是可选项，为4个字节，和C12.19标准中的配置值是一样的，具体参考标准
	<epsem-data>:  <服务长度> + <服务的请求或响应>
<服务的请求或响应>：具体可参考“EPSEM服务”一章；
<服务长度>：为具体请求或响应的实际长度；

   举例数据：（绿色为ACSE头信息，蓝色为EPSEM数据）
60 29				   <acse-pdu>
	A2 05			   <called-AP-title-element>
		80 03 7B C1 75   <called-AP-title> = .123.8437
	A6 04			   <calling-AP-title-element>
		80 02 7B 04	   <calling-AP-title> .123.4
	A8 03			   <calling-AP-invocation-id-element>
		02 01 07	        <calling-AP-invocation-id> = 7
	BE 15			   <user-information-element>
		28 13		   <user-information-external>
			81 11	   <user-information-octet-string>
				80	   <epsem-control>
				0F	   <service-length>
				50	   <logon>
				00 02   <user-id> = 2
				55 53 45 52 20 4E 41 4D 45 20	<user> = “USER NAME”
				00 3C	<req-session-idle-timeout> = 60 sec


EPSEM服务
远程通信（ANSI C12.22）使用EPSEM(Extended Protocol Specifications for Electric Metering)服务和meter通信，在ANSI C12.22中定义了9种服务，每种服务都包含对应的request和response，EPSEM使用一个字节的请求/响应code来表示其属于某个具体的服务, 描述如下：
Request (code: 0x20-0x7F)	Response (code: 0x00-0x12, 参考附录B)
ident	ident-r
read	read-r
write	write-r
logon	logon-r
security	security-r
logoff	logoff-r
terminate	Terminate-r
disconnect	disconnect-r
wait	wait-r
register	register-r
deregister	deregister-r
resolve	resolve-r
trace	trace-r
	EPSEM: 是一种扩展的PSEM服务。在与水， 电或是气表通信时，它能够一次传输多个请求和响     应，EPSEM消息封装在ACSE PDU中。

每种服务具体解释如下：

1) Identification服务（0x20）
Request格式为：
<ident>	::=	20H
Response格式为：
  <ident-r> ::=	<isss> | <bsy> | <err> |
		             <ok> <std> <ver> <rev> <feature>* <end-of-list>
<std> , 1byte,
00H     = ANSI C12.18
01H     = Reserved
02H     = ANSI C12.21
03H     = ANSI C12.22
04H-FFH = Reserved
This value shall be 03H


<ver>, 1byte, This value shall be 01H

<rev>, 1byte, This value shall be 00H

<feature>, multi bytes,
<security-mechanism>:
04H <universal-id-element> |
		     04H <relative-uid-element>
<session-ctrl>:
            05H <byte>
Bit 0 to 6: NBR_SESSION_SUPPORTED
Bit 7: SESSIONLESS_SUPPORTED
※	By default, when <session-ctrl> field is not included in the identification response, one session and sessionless operations are supported.
<device-class>:
            06H <absolute-device-class-element> |
06H <relative-device-class-element>
<device-identity>:
            07H <identity-length> <identity>


<end-of-list>, 1byte, This value shall be 00H


2) Read服务（0x30/0x3F）
格式：见本地通信
3) Write服务（0x40/0x4F）
格式：见本地通信
4) Logon服务（0x50）
Request格式为：
<logon>	::=	50H  <user-id>+2  <user>+10  <req-session-idle-timeout>+2

Response格式为：
	<logon-r>	::=	<nok> | <ok> <resp-session-idle-timeout>
5) Security服务（0x51）
Request格式为：
<security> ::=	51H  <password>+20 [ <user-id>+2 ]

Response格式为：
<security-r> ::=	<sns> | <isss> | <bsy> | <err> |
		                 <ok>
6) Logoff服务（0x52）
Request格式为：
<security> ::=	52H

Response格式为：
<security-r> ::=	<nok> | <ok>
7) Terminate服务（0x21）
Request格式为：
<security> ::=	21H

Response格式为：
<security-r> ::=	<nok> | <ok>
8) Disconnect服务（0x22）+
Disconnect的使用场景是从C12.22子网络中移除一个C12.22的节点，在下面几种情况下使用该服务：
(1) Logon服务建立的session将会一个个被aborted（等同于在离线状态下发送Terminate服务）;
(2) 在idle状态下将导致C12.22节点进入离线状态；
(3) C12.22节点Physical Layer的信号参数也会被该服务影响；
(4) 该服务的请求如果成功，那么发起者将会拥有MP_25(自定义过程25，NETWORK_INTERFACE_CONTROL_PROC)的写权限；

Request格式为：
	<disconnect>	::=	22H
Response格式为：
	<disconnect-r> ::=	参考附录B的响应码
9) Wait服务（0x70）
Request格式为：
	<disconnect>	::=	70H  <time>
Response格式为
<disconnect-r> ::=	<sns> | <isss> | <bsy> | <err> |
		            <ok>


10) Registration服务（0x27）+
注册服务的使用场景是使中继节点（C12.22子网中）的路由表中一直保持为最新可用的设备。该服务承载了节点类型，节点级别， 序列号，注册服务lifetime和注册节点的本地地址等信息（封装在ACSE PDU中， 其中Calling ApTitle设置为注册节点的ApTitle，Called ApTitle设置为C12.22子网中主中继的ApTitle）。
……

Request格式为：
	<disconnect>	::=	27H  <节点类型> <连接类型> <设备级别> <ap-title> <电子序列号>
<地址长度> <本地地址> <注册时间>
   各个参数的具体解释参考C12.22标准……(更多信息参考标准)
Response格式为：
	<disconnect-r> ::=	参考附录B的响应码
11) Deregistration服务（0x24）+
与注册服务相对应，去注册服务是在路由表中移除C12.22中继设备
……(更多信息参考标准)

Request格式为：
	<disconnect>	::=	24H  <ap-title>
Response格式为：
	<disconnect-r> ::=	参考附录B的响应码
12) Resolve服务（0x25）+
解析服务用来获取C12.22节点的本地地址（本地地址是在和同一子网的C12.22节点通信时才使用）
……(更多信息参考标准)

Request格式为：
	<disconnect>	::=	25H  <ap-title>
Response格式为：
	<disconnect-r> ::=	<ok> <本地地址长度> <本地地址>
其他错误码参考附录B的响应码
13) Trace服务（0x26）+
当消息在C12.22子网络中传递给目的C12.22节点时，如果想获取消息发送的路径（C12.22中继列表）
……(更多信息参考标准)

Request格式为：
	<disconnect>	::=	26H  <ap-title>
Response格式为：
	<disconnect-r> ::=	<nok> <ap-title>*
<ok> <ap-title>*
14) Get Configuration Service (0x72) +
该服务仅仅用于C12.22通信模块向C12.22设备请求配置信息,
Request格式为：
	<tls-get-config>	::=	72H
Response格式为：
<tls-get-config-r>	::=	<err> |
								<ok> <control> <interface-status> <node-type> <device-class> <esn> <native-address-len> <native-address> <broadcast-address-len> <broadcast-address> <relay-native-address-len> <relay-native-address> <node-ap-title> <master-relay-aptitle> <relay-aptitle> [<nbr-of-retry><response-timeout>]


ACSE服务
EPSEM服务依赖于无连接模式的ACSE来传递会话和安全参数。包括了aSO-context-element，called-AP-title-element，calling-AP-title-element，mechanism-name-element和calling-authentication-value-element等参数，常见的ACSE元素如下：

*********************************************************************
AUDT-apdu ::= [APPLICATION 0] IMPLICIT SEQUENCE {
  protocol-version                [0] IMPLICIT BIT STRING {version1(0)} DEFAULT {version1},
  aSO-context                      [1]  ASO-context-name OPTIONAL,
  called-AP-title                  [2]  AP-title OPTIONAL,
  called-AE-qualifier             [3]  AE-qualifier OPTIONAL,
  called-AP-invocation-id        [4]  AP-invocation-id OPTIONAL,
  called-AE-invocation-id        [5]  AE-invocation-id OPTIONAL,
  calling-AP-title                 [6]  AP-title OPTIONAL,
  calling-AE-qualifier            [7]  AE-qualifier OPTIONAL,
  calling-AP-invocation-id       [8]  AP-invocation-id OPTIONAL,
  calling-AE-invocation-id       [9]  AE-invocation-id OPTIONAL,     -- Not used
  mechanism-name                   [11] IMPLICIT Mechanism-name OPTIONAL,
  calling-authentication-value  [12] EXPLICIT Authentication-value OPTIONAL,
  p-context                         [14] IMPLICIT Default-P-context OPTIONAL, -- Not used
  implementation-information    [29] IMPLICIT GraphicString OPTIONAL,  -- Not used
  ...,
  ...,
  user-information              [30] IMPLICIT SEQUENCE SIZE (1, ..., 0 | 2..MAX) OF EXTERNAL
}
*********************************************************************

1) Universal-ID of Called and Calling AP Title Element（0x06）
universal-aptitle-element
   06H  + <universal-id-length> + <universal-id>

2) Relative-ID of Called and Calling AP Title Element（0x80）
relative-aptitle-element
   80H  +  <relative-uid-length>  +  <relative-uid>
3) aSO-context-element（0xA1）
aSO-context-element
A1H + <aSO-context-length> + <aSO-context>
aSO-context:
    06H + <universal-id-length> + <universal-id>

4) called-AP-title-element（0xA2）
called-AP-title-element
A2H + <called-AP-title-length> + <called-AP-title>
called-AP-title:
    <universal-aptitle-element>
或者 <relative-aptitle-element>

5) called-AP-invocation-id-element（0xA4）
called-AP-invocation-id-element
A4H + <called-AP-invocation-id-integer-length> + <called-AP-invocation-id-integer>
called-AP-invocation-id-integer：
     02H + <called-AP-invocation-id-length> + <called-AP-invocation-id>

6) calling-AP-title-element（0xA6）
calling-AP-title-element
A6H + <calling-AP-title-length> +<calling-AP-title>
called-AP-title:
     <universal-aptitle-element>
或者 <relative-aptitle-element>

7) calling-AE-qualifier-element（0xA7）
calling-AE-qualifier-element
A7H + <calling-AE-qualifier-integer-length> + <calling-AE-qualifier-integer>
calling-AE-qualifier-integer：
    02H + <calling-AE-qualifier-length> + <calling-AE-qualifier>


8) calling-AP-invocation-id-element（0xA8）
calling-AP-title-element
A8H + <calling-AP-invocation-id-integer-length> + <calling-AP-invocation-id-integer>
calling-AP-invocation-id-integer：
    02H + <calling-AP-invocation-id-length> <calling-AP-invocation-id>

9) mechanism-name-element（0x8B）
mechanism-name-element，
8B H + <mechanism-name-length> + <mechanism-name>
mechanism-name
    <universal-id>

10) calling-authentication-value-element（0xAC）
calling-authentication-value-element
ACH + <calling-authentication-value-length> +
<calling-authentication-value-external>
calling-authentication-value-external：
    A2H +
<calling-authenticationvalue-external-length> + [ <calling-authentication-value-indirect-reference> ]
+ <calling-authentication-value-encoding>
calling-authentication-value-indirect-reference，可选
    02H 01H 00H
calling-authentication-value-encoding:
    <calling-authentication-value-single-asn1> | <calling-authentication-value-octet-aligned>
calling-authentication-value-single-asn1:
A0H
+ <calling-authentication-value-asn1-length> + <calling-authentication-value-asn1>
calling-authentication-value-asn1:
<calling-authentication-value-c1222>
或者
<calling-authentication-value-c1221>
或者
<calling-authentication-value-other-asn1>
<calling-authentication-value-c1222>
A1H
<calling-authentication-value-c1222-length>
+ [ <key-id-element> ]
+ <iv-element>
<key-id-element>
80H
<key-id-length> + <key-id>
<iv-element>
81H
<iv-length> + <iv>



calling-authentication-value-octet-aligned：
81H
+ <calling-authentication-value-length>
+ <calling-authentication-value-other>
calling-authentication-value-other：
    认证的值是按照ASN.1的语法来描述


11) user-information-element（0xBE）
user-information-element
BEH +
< user-information-external-length> +
< user-information-external>
user-information-external：
    28H  +
<user-information-length> + [ <user-information-indirect-reference> ]
<user-information-octet-string>
user-information-indirect-reference， 可选
02H
+ <user-information-encoding-length>
+ <user-information-encoding>
user-information-octet-string
81H + <user-information-octet-string-length>  + <user-information>(EPSEM格式)
user-information
    <epsem> 或者 <c1222sm-user-information>
epsem
    参考EPSEM服务
c1222sm-user-information
    <epsem> + [<padding>] + <mac>


ACSE格式举例：
ACSE PDU:
    60H + <elements-length> + <elements> (ACSE格式)
	<elements-length>：为elements的实际长度
	<elements>分为：
           （1）<未分包的acse-elements>
[ <aSO-context-element> ] A1H可选
[ <called-AP-title-element> ] A2H可选
[ <called-AP-invocation-id-element> ] A4H可选
[ <calling-AP-title-element> ] A6H可选
[ <calling-AE-qualifier-element> ] A7H可选
<calling-AP-invocation-id-element> A8H 必选
[ <mechanism-name-element> ] 8B H可选
[ <calling-authentication-value-element>] ACH 可选
				<user-information-element> BEH  必选 (EPSEM格式)

          （2）<分包的acse-elements>
[ <aSO-context-element> ] A1H 可选
[ <called-AP-title-element> ] A2H 可选
<called-AE-qualifier-element> A3H 必选
[ <calling-AP-title-element> ] A6H 可选
[ <calling-AE-qualifier-element> ] A7H 可选
<calling-AP-invocation-id-element> A8H必选
			    <segment-user-information-element> BEH必选  (EPSEM格式)


5.1.1 Unsecured session
下面的例子由节点”.123.4”发起会话, 此会话用于读（全读）节点”.123.8437”的table 5(表身份信息)
Logon request：
60 29				     <acse-pdu>
	A2 05			     <called-AP-title-element>
		80 03 7B C1 75	<called-AP-title> = .123.8437
	A6 04			     <calling-AP-title-element>
		80 02 7B 04	     <calling-AP-title> .123.4
	A8 03			     <calling-AP-invocation-id-element>
		02 01 07	          <calling-AP-invocation-id> = 7
	BE 15			     <user-information-element>
		28 13		     <user-information-external>
			81 11	     <user-information-octet-string>
				80	     <epsem-control>
				0F	     <service-length>
				50	     <logon>
				00 02	<user-id> = 2
				55 53 45 52 20 4E 41 4D 45 20	<user> = “USER NAME”
				00 3C	<req-session-idle-timeout> = 60 sec

 Logon response：
60 22				     <acse-pdu>
	A2 04			     <called-AP-title-element>
		80 02 7B 04	     <called-AP-title> = .123.4
	A4 03			     <called-AP-invocation-id-element>
		02 01 07	          <called-AP-invocation-id> = 7
	A6 05			     <calling-AP-title-element>
		80 03 7B C1 75	<calling-AP-title> = .123.8437
	A8 03			     <calling-AP-invocation-id-element>
		02 01 00	          <calling-AP-invocation-id> = 0
	BE 09			     <user-information-element>
		28 07		     <user-information-external>
			81 05	     <user-information-octet-string>
				80	     <epsem-control>
				03	     <service-length>
				00	     <ok>
				00 3C	<resp-session-idle-timeout> = 60 sec

 Read request:
60 1D				     <acse-pdu>
	A2 05			     <called-AP-title-element>
		80 03 7B C1 75	<called-AP-title> = .123.8437
	A6 04			     <calling-AP-title-element>
		80 02 7B 04	     <calling-AP-title> .123.4
	A8 03	               <calling-AP-invocation-id-element>
		02 01 00	          <calling-AP-invocation-id> = 0
	BE 09			     <user-information-element>
		28 07		     <user-information-external>
			81 05	     <user-information-octet-string>
				80	     <epsem-control>
				03	     <service-length>
				30	     <full-read>
				00 05	<table-id> = 5

5.1.1 Unsecured session
下面的例子由节点”.123.4”发起会话, 此会话用于读（全读）节点”.123.8437”的table 5(表身份信息)
Logon request：
60 29				     <acse-pdu>
	A2 05			     <called-AP-title-element>
		80 03 7B C1 75	<called-AP-title> = .123.8437
	A6 04			     <calling-AP-title-element>
		80 02 7B 04	     <calling-AP-title> .123.4
	A8 03			     <calling-AP-invocation-id-element>
		02 01 07	          <calling-AP-invocation-id> = 7
	BE 15			     <user-information-element>
		28 13		     <user-information-external>
			81 11	     <user-information-octet-string>
				80	     <epsem-control>
				0F	     <service-length>
				50	     <logon>
				00 02	<user-id> = 2
				55 53 45 52 20 4E 41 4D 45 20	<user> = “USER NAME”
				00 3C	<req-session-idle-timeout> = 60 sec

 Logon response：
60 22				     <acse-pdu>
	A2 04			     <called-AP-title-element>
		80 02 7B 04	     <called-AP-title> = .123.4
	A4 03			     <called-AP-invocation-id-element>
		02 01 07	          <called-AP-invocation-id> = 7
	A6 05			     <calling-AP-title-element>
		80 03 7B C1 75	<calling-AP-title> = .123.8437
	A8 03			     <calling-AP-invocation-id-element>
		02 01 00	          <calling-AP-invocation-id> = 0
	BE 09			     <user-information-element>
		28 07		     <user-information-external>
			81 05	     <user-information-octet-string>
				80	     <epsem-control>
				03	     <service-length>
				00	     <ok>
				00 3C	<resp-session-idle-timeout> = 60 sec

 Read request:
60 1D				     <acse-pdu>
	A2 05			     <called-AP-title-element>
		80 03 7B C1 75	<called-AP-title> = .123.8437
	A6 04			     <calling-AP-title-element>
		80 02 7B 04	     <calling-AP-title> .123.4
	A8 03	               <calling-AP-invocation-id-element>
		02 01 00	          <calling-AP-invocation-id> = 0
	BE 09			     <user-information-element>
		28 07		     <user-information-external>
			81 05	     <user-information-octet-string>
				80	     <epsem-control>
				03	     <service-length>
				30	     <full-read>
				00 05	<table-id> = 5

 Read response:
60 37				     <acse-pdu>
	A2 04			     <called-AP-title-element>
		80 02 7B 04	     <called-AP-title> = .123.4
	A4 03	                <called-AP-invocation-id-element>
		02 01 00	           <called-AP-invocation-id> = 0
	A6 05			      <calling-AP-title-element>
		80 03 7B C1 75	<calling-AP-title> = .123.8437
	A8 03	                <calling-AP-invocation-id-element>
		02 01 01	           <calling-AP-invocation-id> = 1
	BE 1E			      <user-information-element>
		28 1C		      <user-information-external>
			81 1A	      <user-information-octet-string>
				80	      <epsem-control>
				18	     <service-length>
				00	     <ok>
				00 14	<count>
				44 45 56 49 43 45 20 49 44 20 20 20 20 20 20 20 20 20 20 20 “DEVICE ID”
				43	     <cksum>
 Logoff request:
60 1B				     <acse-pdu>
	A2 05			     <called-AP-title-element>
		80 03 7B C1 75	<called-AP-title> = .123.8437
	A6 04			     <calling-AP-title-element>
		80 02 7B 04	     <calling-AP-title> .123.4
	A8 03			     <calling-AP-invocation-id-element>
		02 01 01	          <calling-AP-invocation-id> = 1
	BE 07			     <user-information-element>
		28 05		     <user-information-external>
			81 03	     <user-information-octet-string>
				80	     <epsem-control>
				01	     <service-length>
				52	     <logoff>

 Logoff response:
60 20				     <acse-pdu>
	A2 04			     <called-AP-title-element>
		80 02 7B 04	     <called-AP-title> = .123.4
	A4 03	               <called-AP-invocation-id-element>
		02 01 01          <called-AP-invocation-id> = 1
	A6 05			     <calling-AP-title-element>
		80 03 7B C1 75	<calling-AP-title> = .123.8437
	A8 03                    <calling-AP-invocation-id-element>
		02 01 02	          <calling-AP-invocation-id> = 2
	BE 07			     <user-information-element>
		28 05		     <user-information-external>
			81 03	     <user-information-octet-string>
				80	     <epsem-control>
				01	     <service-length>
00	     <ok>


5.1.2 Unsecured sessionless
下面的例子由节点”.123.4”发起的无回话事务（sessionless transaction）, 此会话用于读（偏移读）节点”.123.8437”table 1(厂商标识表)的“表序列号”（MFG_SERIAL_NUMBER）字段：
 Offset partial read request：
60 22					<acse-pdu>
	A2 05				<called-AP-title-element>
		80 03 7B C1 75	<called-AP-title> = .123.8437
	A6 04				<calling-AP-title-element>
		80 02 7B 04		<calling-AP-title> .123.4
	A8 03				<calling-AP-invocation-id-element>
		02 01 14			<calling-AP-invocation-id> = 20
	BE 0E				<user-information-element>
		28 0C			<user-information-external>
			81 0A		<user-information-octet-string>
				80		<epsem-control>
				08		<service-length>
				3F		<pread-offset>
				00 01	<tableid> = 1
				00 00 10	<offset> = 16
				00 10	<octet-count> = 16

 Offset partial read response：
60 33					<acse-pdu>
	A2 04				<called-AP-title-element>
		80 02 7B 04		<called-AP-title> = .123.4
	A4 03				<called-AP-invocation-id-element>
		02 01 14			<called-AP-invocation-id> = 20
	A6 05				<calling-AP-title-element>
		80 03 7B C1 75	<calling-AP-title> = .123.8437
	A8 03				<calling-AP-invocation-id-element>
		02 01 14			<calling-AP-invocation-id> = 20
	BE 1A				<user-information-element>
		28 18			<user-information-external>
			81 16		<user-information-octet-string>
				80		<epsem-control>
				14		<service-length>
				00		<ok>
				00 10	<count>
				4D 41 4E 55 46 41 43 54 55 52 45 52 20 53 4E 20 “MANUFACTURER SN”
				92		<cksum>
5.1.3 Unsecured notification
下面的例子是由节点”.123.273”发起过程26的非应答通知到目标节点“.123.2”，通知是明文的：
 Write request
60 2E					<acse-pdu>
	A2 04				<called-AP-title-element>
		80 02 7B 02		<called-AP-title> = .123.2
	A6 05				<calling-AP-title-element>
		80 03 7B 82 11	<calling-AP-title> = .123.273
	A7 03				<calling-AE-qualifier-element>
		02 01 06	  		URGENT = TRUE, NOTIFICATION = TRUE
	A8 03				<calling-AP-invocation-id-element>
		02 01 18			<calling-AP-invocation-id> = 24
	BE 15				<user-information-element>
		28 13			<user-information-external>
			81 11		<user-information-octet-string>
			92			<epsem-control> ED_CLASS_INCLUDED = true, RESPONSE_CONTROL = 2
			54 45 4D 50	<ed-class>
			0B			<service-length>
			40			<full-write>
			00 07		<tableid> = 7 (In little endian)
			00 05		<count> = 5
			1A 00		PROC = 26
			00			SEQ_NBR = 0
			01 00		PARM = 1 (Primary power down event code)
			E5			<cksum>

5.2 认证通信
5.2.1 Authentication session
下面的例子由节点”.123.4”发起会话, 此会话用于读（全读）节点”.123.8437”的table 5(表身份信息)，交换消息时包含了一个消息鉴权码(mac)。
 Logon request:
60 3E					<acse-pdu>
	A2 05				<called-AP-title-element>
		80 03 7B C1 75	<called-AP-title> = .123.8437
	A6 04				<calling-AP-title-element>
		80 02 7B 04		<calling-AP-title> .123.4
	A8 03				<calling-AP-invocation-id-element>
		02 01 04			<calling-AP-invocation-id> = 4
	AC 0F				<calling-authentication-value-element>
		A2 0D			<calling-authentication-value-external>
			A0 0B		<calling-authentication-value-single-asn1>
				A1 09	<calling-authentication-value-c1222>
					80 01 02				<key-id-element> = 2
					81 04 48 F3 C2 05		<iv-element> = 2008-10-13 21:47:49 UTC
	BE 19				<user-information-element>
		28 17			<user-information-external>
			81 15		<user-information-octet-string>
				84		<epsem-control> SECURITY_MODE = 1
				0F		<service-length>
				50		<logon>
				00 02	<user-id> = 2
				55 53 45 52 20 4E 41 4D 45 20	<user> = “USER NAME”
				00 3C		<req-session-idle-timeout> = 60 sec
				AD DC 46 60	<mac>
Network context = 2.16.124.113620.1.22.0
K =   08070605040302010807060504030201
L =   B86D06FD5929DFAAF6BE44CED8939EC3
D =   70DA0DFAB253BF55ED7C899DB1273D01
Q =   E1B41BF564A77EABDAF9133B624E7A02
N =   A20D060B607C86F7540116007BC175A8
      03020104AC0FA20DA00BA10980010281
      0448F3C205BE192817811584A60C060A
      607C86F7540116007B040248F3C2050F
      50000255534552204E414D4520003C80
Tag = ADDC4660BD37FFC17E38A52A9E9F9902
T=    ADDC4660

5.2 认证通信
5.2.1 Authentication session
下面的例子由节点”.123.4”发起会话, 此会话用于读（全读）节点”.123.8437”的table 5(表身份信息)，交换消息时包含了一个消息鉴权码(mac)。
 Logon request:
60 3E					<acse-pdu>
	A2 05				<called-AP-title-element>
		80 03 7B C1 75	<called-AP-title> = .123.8437
	A6 04				<calling-AP-title-element>
		80 02 7B 04		<calling-AP-title> .123.4
	A8 03				<calling-AP-invocation-id-element>
		02 01 04			<calling-AP-invocation-id> = 4
	AC 0F				<calling-authentication-value-element>
		A2 0D			<calling-authentication-value-external>
			A0 0B		<calling-authentication-value-single-asn1>
				A1 09	<calling-authentication-value-c1222>
					80 01 02				<key-id-element> = 2
					81 04 48 F3 C2 05		<iv-element> = 2008-10-13 21:47:49 UTC
	BE 19				<user-information-element>
		28 17			<user-information-external>
			81 15		<user-information-octet-string>
				84		<epsem-control> SECURITY_MODE = 1
				0F		<service-length>
				50		<logon>
				00 02	<user-id> = 2
				55 53 45 52 20 4E 41 4D 45 20	<user> = “USER NAME”
				00 3C		<req-session-idle-timeout> = 60 sec
				AD DC 46 60	<mac>
Network context = 2.16.124.113620.1.22.0
K =   08070605040302010807060504030201
L =   B86D06FD5929DFAAF6BE44CED8939EC3
D =   70DA0DFAB253BF55ED7C899DB1273D01
Q =   E1B41BF564A77EABDAF9133B624E7A02
N =   A20D060B607C86F7540116007BC175A8
      03020104AC0FA20DA00BA10980010281
      0448F3C205BE192817811584A60C060A
      607C86F7540116007B040248F3C2050F
      50000255534552204E414D4520003C80
Tag = ADDC4660BD37FFC17E38A52A9E9F9902
T=    ADDC4660

 Logon response:
60 37					<acse-pdu>
	A2 04				<called-AP-title-element>
		80 02 7B 04		<called-AP-title> = .123.4
	A4 03				<called-AP-invocation-id-element>
		02 01 04			<called-AP-invocation-id> = 4
	A6 05				<calling-AP-title-element>
		80 03 7B C1 75	<calling-AP-title> = .123.8437
	A8 03				<calling-AP-invocation-id-element>
		02 01 00			<calling-AP-invocation-id> = 0
	AC 0F				<calling-authentication-value-element>
		A2 0D			<calling-authentication-value-external>
			A0 0B		<calling-authentication-value-single-asn1>
				A1 09	<calling-authentication-value-c1222>
					80 01 02				<key-id-element> = 2
					81 04 48 F3 C2 04		<iv-element> = 2008-10-13 21:47:48 UTC
	BE 0D				<user-information-element>
		28 0B			<user-information-external>
			81 09		<user-information-octet-string>
				84		<epsem-control> SECURITY_MODE = 1
				03		<service-length>
				00		<ok>
				00 3C		<resp-session-idle-timeout> = 60 sec
				C0 7D B1 65	<mac>
N =   A20C060A607C86F7540116007B04A403
      020104A803020100AC0FA20DA00BA109
      800102810448F3C204BE0D280B810984
      A60D060B607C86F7540116007BC17502
      48F3C2040300003C8000000000000000
Tag = C07DB165308C0AF031240676F624C8B5
T =   C07DB165

 Read request:
60 21					<acse-pdu>
	A2 05				<called-AP-title-element>
		80 03 7B C1 75	<called-AP-title> = .123.8437
	A6 04				<calling-AP-title-element>
		80 02 7B 04		<calling-AP-title> .123.4
	A8 03				<calling-AP-invocation-id-element>
		02 01 00			<calling-AP-invocation-id> = 0
	BE 0D				<user-information-element>
		28 0B			<user-information-external>
			81 09		<user-information-octet-string>
				84		<epsem-control> SECURITY_MODE = 1
				03		<service-length>
				30		<full-read>
				00 05		<table-id> = 5
				75 E7 5A 51	<mac>
N =   A20D060B607C86F7540116007BC175A8
      03020100BE0D280B810984A60C060A60
      7C86F7540116007B040248F3C2040330
      00058000000000000000000000000000
Tag = 75E75A517893E5F2F83D725ACD3BD8F9
T =   75E75A51

 Read response:
60 3B					<acse-pdu>
	A2 04				<called-AP-title-element>
		80 02 7B 04		<called-AP-title> = .123.4
	A4 03				<called-AP-invocation-id-element>
		02 01 00			<called-AP-invocation-id> = 0
	A6 05				<calling-AP-title-element>
		80 03 7B C1 75	<calling-AP-title> = .123.8437
	A8 03				<calling-AP-invocation-id-element>
		02 01 01			<calling-AP-invocation-id> = 1
	BE 22				<user-information-element>
		28 20			<user-information-external>
			81 1E		<user-information-octet-string>
				84		<epsem-control> SECURITY_MODE = 1
				18		<service-length>
				00		<ok>
				00 14	<count>
				44 45 56 49 43 45 20 49 44 20	“DEVICE ID”
				20 20 20 20 20 20 20 20 20 20
				43			<cksum>
				93 96 5A F1	<mac>
N =   A20C060A607C86F7540116007B04A403
      020100A803020101BE222820811E84A6
      0D060B607C86F7540116007BC1750248
      F3C20518000014444556494345204944
      20202020202020202020204380000000
Tag = 93965AF1592D4316C4422B93F9C4769A
T =   93965AF1

 Logoff request
60 1F					<acse-pdu>
	A2 05				<called-AP-title-element>
		80 03 7B C1 75	<called-AP-title> = .123.8437
	A6 04				<calling-AP-title-element>
		80 02 7B 04		<calling-AP-title> .123.4
	A8 03				<calling-AP-invocation-id-element>
		02 01 01			<calling-AP-invocation-id> = 1
	BE 0B				<user-information-element>
		28 09			<user-information-external>
			81 07		<user-information-octet-string>
				84		<epsem-control> SECURITY_MODE = 1
				01		<service-length>
				52			<logoff>
				B6 47 27 4F	<mac>
N =   A20D060B607C86F7540116007BC175A8
      03020101BE0B2809810784A60C060A60
      7C86F7540116007B040248F3C2040152
Tag = B647274FA20F920E367AF64DEDA56119
T =   B647274F

 Logoff response
60 24					<acse-pdu>
	A2 04				<called-AP-title-element>
		80 02 7B 04		<called-AP-title> = .123.4
	A4 03				<called-AP-invocation-id-element>
		02 01 01			<called-AP-invocation-id> = 1
	A6 05				<calling-AP-title-element>
		80 03 7B C1 75	<calling-AP-title> = .123.8437
	A8 03				<calling-AP-invocation-id-element>
		02 01 02			<calling-AP-invocation-id> = 2
	BE 0B				<user-information-element>
		28 09			<user-information-external>
			81 07		<user-information-octet-string>
				84		<epsem-control> SECURITY_MODE = 1
				01		<service-length>
				00			<ok>
				AD 30 B6 E7	<mac>
N =   A20C060A607C86F7540116007B04A403
      020101A803020102BE0B2809810784A6
      0D060B607C86F7540116007BC1750248
      F3C20501008000000000000000000000
Tag = AD30B6E76134AED93E3F212FF2674040
T =   AD30B6E7


5.2.2 Authenticated sessionless
下面的例子由节点”.123.4”发起的无回话事务（sessionless transaction）, 此会话用于读（偏移读）节点”.123.8437”table 1(厂商标识表)的“表序列号”（MFG_SERIAL_NUMBER）字段, 交换消息时包含了一个消息鉴权码。
 Offset partial read request
60 37					<acse-pdu>
	A2 05				<called-AP-title-element>
		80 03 7B C1 75	<called-AP-title> = .123.8437
	A6 04				<calling-AP-title-element>
		80 02 7B 04		<calling-AP-title> .123.4
	A8 03				<calling-AP-invocation-id-element>
		02 01 09			<calling-AP-invocation-id> = 9
	AC 0F				<calling-authentication-value-element>
		A2 0D			<calling-authentication-value-external>
			A0 0B		<calling-authentication-value-single-asn1>
				A1 09	<calling-authentication-value-c1222>
					80 01 02				<key-id-element> = 2
					81 04 48 F3 C6 07		<iv-element> = 2008-10-13 22:04:55 UTC
	BE 12				<user-information-element>
		28 10			<user-information-external>
			81 0E		<user-information-octet-string>
				84		<epsem-control> SECURITY_MODE = 1
				08		<service-length>
				3F		<pread-offset>
				00 01	<tableid> = 1
               00 00 10		<offset> = 16
				00 10		<octet-count> = 16
				F0 F6 4B C4	<mac>
Network context = 2.16.124.113620.1.22.0
K =   08070605040302010807060504030201
L =   B86D06FD5929DFAAF6BE44CED8939EC3
D =   70DA0DFAB253BF55ED7C899DB1273D01
Q =   E1B41BF564A77EABDAF9133B624E7A02
N =   A20D060B607C86F7540116007BC175A8
      03020109AC0FA20DA00BA10980010281
      0448F3C607BE122810810E84A60C060A
      607C86F7540116007B040248F3C60708
      3F000100001000108000000000000000
Tag = F0F64BC4DB64D0212F986D44207904F8
T =   F0F64BC4

 Offset partial read response
60 48					<acse-pdu>
	A2 04				<called-AP-title-element>
		80 02 7B 04		<called-AP-title> = .123.4
	A4 03				<called-AP-invocation-id-element>
		02 01 09			<called-AP-invocation-id> = 9
	A6 05				<calling-AP-title-element>
		80 03 7B C1 75	<calling-AP-title> = .123.8437
	A8 03				<calling-AP-invocation-id-element>
		02 01 09			<calling-AP-invocation-id> = 9
	AC 0F				<calling-authentication-value-element>
		A2 0D			<calling-authentication-value-external>
			A0 0B		<calling-authentication-value-single-asn1>
				A1 09	<calling-authentication-value-c1222>
					80 01 02				<key-id-element> = 2
					81 04 48 F3 C6 06		<iv-element> = 2008-10-13 22:04:54 UTC
	BE 1E				<user-information-element>
		28 1C			<user-information-external>
			81 1A		<user-information-octet-string>
				84		<epsem-control> SECURITY_MODE = 1
				14		<service-length>
				00		<ok>
				00 10	<count>
				4D 41 4E 55 46 41 43 54 55 52 45 52 20 53 4E 20 “MANUFACTURER SN”
				92			<cksum>
				45 92 25 55	<mac>
N =   A20C060A607C86F7540116007B04A403
      020109A803020109AC0FA20DA00BA109
      800102810448F3C606BE1E281C811A84
      A60D060B607C86F7540116007BC17502
      48F3C606140000104D414E5546414354
      5552455220534E209280000000000000
Tag = 4592255508295586868105DA6BEBA0F5
T =   45922555

5.2.3 Authenticated notification
下面的例子是由节点”.123.273”发起过程26的非应答通知到目标节点“.123.2”，通知包含了一个消息鉴权码：
 Write request
60 43					<acse-pdu>
	A2 04				<called-AP-title-element>
		80 02 7B 02		<called-AP-title> = .123.2
	A6 05				<calling-AP-title-element>
		80 03 7B 82 11	<calling-AP-title> = .123.273
	A7 03				<calling-AE-qualifier-element>
		02 01 04			NOTIFICATION = TRUE
	A8 03				<calling-AP-invocation-id-element>
		02 01 0C			<calling-AP-invocation-id> = 12
	AC 0F				<calling-authentication-value-element>
		A2 0D			<calling-authentication-value-external>
			A0 0B		<calling-authentication-value-single-asn1>
				A1 09	<calling-authentication-value-c1222>
					80 01 02				<key-id-element> = 2
					81 04 48 F3 C9 E5		<iv-element> = 2008-10-13 22:21:25 UTC
	BE 19				<user-information-element>
		28 17			<user-information-external>
			81 15		<user-information-octet-string>
				96		<epsem-control> ED_CLASS_INCLUDED = true,
					                SECURITY_MODE = 1, RESPONSE_CONTROL = 2
				54 45 4D 50	<ed-class>
				0B		<service-length>
				40		<full-write>
				00 07	<tableid> = 7 (In little endian)
				00 05	<count> = 5
				1A 00	PROC = 26
				00		SEQ_NBR = 0
				02 00	PARM = 2 (Primary power up event code)
				E4			<cksum>
				D7 A4 84 41	<mac>
Network context = 2.16.124.113620.1.22.0
K =   08070605040302010807060504030201
L =   B86D06FD5929DFAAF6BE44CED8939EC3
D =   70DA0DFAB253BF55ED7C899DB1273D01
Q =   E1B41BF564A77EABDAF9133B624E7A02
N =   A20C060A607C86F7540116007B02A703
      020104A80302010CAC0FA20DA00BA109
      800102810448F3C9E5BE192817811596
      A60D060B607C86F7540116007B821102
      48F3C9E554454D500B40000700051A00
      000200E4800000000000000000000000
Tag = D7A484411EB10A789868F4B2FFF1C3E1
T =   D7A48441

5.3 认证&加密通信
5.3.1 Encrypted session
下面的例子由节点”.123.4”发起会话, 此会话用于读（全读）节点”.123.8437”的table 5(表身份信息),交换消息时包含了一个消息鉴权码并且应用的内容(EPSEM)是被加密的。
 Logon request
60 3E					<acse-pdu>
	A2 05				<called-AP-title-element>
		80 03 7B C1 75	<called-AP-title> = .123.8437
	A6 04				<calling-AP-title-element>
		80 02 7B 04		<calling-AP-title> .123.4
	A8 03				<calling-AP-invocation-id-element>
		02 01 05			<calling-AP-invocation-id> = 5
	AC 0F				<calling-authentication-value-element>
		A2 0D			<calling-authentication-value-external>
			A0 0B		<calling-authentication-value-single-asn1>
				A1 09	<calling-authentication-value-c1222>
					80 01 02				<key-id-element> = 2
					81 04 48 F3 CA BD		<iv-element> = 2008-10-13 22:25:01 UTC
	BE 19				<user-information-element>
		28 17			<user-information-external>
			81 15		<user-information-octet-string>
				88		<epsem-control> SECURITY_MODE = 2
				D0 60 62 64 AE B9 18 1D 92 2C EE 71	Encrypted payload
				56 01 85 63 							Encrypted payload
				68 77 A1 57							<mac>
Network context = 2.16.124.113620.1.22.0
K =   08070605040302010807060504030201
L =   B86D06FD5929DFAAF6BE44CED8939EC3
D =   70DA0DFAB253BF55ED7C899DB1273D01
Q =   E1B41BF564A77EABDAF9133B624E7A02
N =   A20D060B607C86F7540116007BC175A8
      03020105AC0FA20DA00BA10980010281
      0448F3CABDBE192817811588A60C060A
      607C86F7540116007B040248F3CABD80
Tag = 36E55BDFD84A6FD88B41B9214849BBFC
C =   C4A76212A94BA5379C6AB57386FC055B
Tag = 5E92FA8811F8AB1F30DC1B3BC17874C5
T =   6877A157
when decrypted:
						0F		<service-length>
						50		<logon>
						0002		<user-id>
						55534552204E414D4520   <user>
						003C		<req-session-idle-timeout>

 Logon response
60 37					<acse-pdu>
	A2 04				<called-AP-title-element>
		80 02 7B 04		<called-AP-title> = .123.4
	A4 03				<called-AP-invocation-id-element>
		02 01 05			<called-AP-invocation-id> = 5
	A6 05				<calling-AP-title-element>
		80 03 7B C1 75	<calling-AP-title> = .123.8437
	A8 03				<calling-AP-invocation-id-element>
		02 01 00			<calling-AP-invocation-id> = 0
	AC 0F				<calling-authentication-value-element>
		A2 0D			<calling-authentication-value-external>
			A0 0B		<calling-authentication-value-single-asn1>
				A1 09	<calling-authentication-value-c1222>
					80 01 02				<key-id-element> = 2
					81 04 48 F3 CA BC		<iv-element> = 2008-10-13 22:25:00 UTC
	BE 0D				<user-information-element>
		28 0B			<user-information-external>
			81 09		<user-information-octet-string>
				88		<epsem-control> SECURITY_MODE = 2
				9E DF 3C F4	Encrypted payload
				C0 CE B3 04	<mac>
N =   A20C060A607C86F7540116007B04A403
      020105A803020100AC0FA20DA00BA109
      800102810448F3CABCBE0D280B810988
      A60D060B607C86F7540116007BC17502
      48F3CABC800000000000000000000000
Tag = DA739FA27808328FCF372DB1AFB302B4
C =   9EDF3CF4800000000000000000000000
Tag = 1ABD2CA62B64080B8CDAAB4E8AB3932C
T =   C0CEB304

						when decrypted:
						03		<service-length>
						00		<ok>
						003C		<resp-session-idle-timeout>

 Logon response
60 37					<acse-pdu>
	A2 04				<called-AP-title-element>
		80 02 7B 04		<called-AP-title> = .123.4
	A4 03				<called-AP-invocation-id-element>
		02 01 05			<called-AP-invocation-id> = 5
	A6 05				<calling-AP-title-element>
		80 03 7B C1 75	<calling-AP-title> = .123.8437
	A8 03				<calling-AP-invocation-id-element>
		02 01 00			<calling-AP-invocation-id> = 0
	AC 0F				<calling-authentication-value-element>
		A2 0D			<calling-authentication-value-external>
			A0 0B		<calling-authentication-value-single-asn1>
				A1 09	<calling-authentication-value-c1222>
					80 01 02				<key-id-element> = 2
					81 04 48 F3 CA BC		<iv-element> = 2008-10-13 22:25:00 UTC
	BE 0D				<user-information-element>
		28 0B			<user-information-external>
			81 09		<user-information-octet-string>
				88		<epsem-control> SECURITY_MODE = 2
				9E DF 3C F4	Encrypted payload
				C0 CE B3 04	<mac>
N =   A20C060A607C86F7540116007B04A403
      020105A803020100AC0FA20DA00BA109
      800102810448F3CABCBE0D280B810988
      A60D060B607C86F7540116007BC17502
      48F3CABC800000000000000000000000
Tag = DA739FA27808328FCF372DB1AFB302B4
C =   9EDF3CF4800000000000000000000000
Tag = 1ABD2CA62B64080B8CDAAB4E8AB3932C
T =   C0CEB304

						when decrypted:
						03		<service-length>
						00		<ok>
						003C		<resp-session-idle-timeout>

 Security response
60 24					<acse-pdu>
	A2 04				<called-AP-title-element>
		80 02 7B 04		<called-AP-title> = .123.8437
	A4 03				<called-AP-invocation-id-element>
		02 01 00			<called-AP-invocation-id> = 0
	A6 05				<calling-AP-title-element>
		80 03 7B C1 75	<calling-AP-title> = .123.8437
	A8 03				<calling-AP-invocation-id-element>
		02 01 01			<calling-AP-invocation-id> = 1
	BE 0B				<user-information-element>
		28 09			<user-information-external>
			81 07		<user-information-octet-string>
				88		<epsem-control> SECURITY_MODE = 2
				CB 22			Encrypted payload
				2B 67 76 D8		<mac>
N =   A20C060A607C86F7540116007B04A403
      020100A803020101BE0B2809810788A6
      0D060B607C86F7540116007BC1750248
      F3CABD80000000000000000000000000
Tag = 90579F871DB72E6BBC9EB60A3532BBAA
C =   CB228000000000000000000000000000
Tag = BB30E95F51346D9790AFC5DEFEBA6A44
T =   2B6776D8

						when decrypted:
						01		<service-length>
						00		<OK>

 Read request
60 21					<acse-pdu>
	A2 05				<called-AP-title-element>
		80 03 7B C1 75	<called-AP-title> = .123.8437
	A6 04				<calling-AP-title-element>
		80 02 7B 04		<calling-AP-title> .123.4
	A8 03				<calling-AP-invocation-id-element>
		02 01 01			<calling-AP-invocation-id> = 1
	BE 0D				<user-information-element>
		28 0B			<user-information-external>
			81 09		<user-information-octet-string>
				88		<epsem-control> SECURITY_MODE = 2
				81 5A 8C 8B		Encrypted payload
				0E 51 DC 15		<mac>
N =   A20D060B607C86F7540116007BC175A8
      03020101BE0D280B810988A60C060A60
      7C86F7540116007B040248F3CABC8000
Tag = CC45A38E02132F56E7627F7473DFFA54
C =   815A8C8B800000000000000000000000
Tag = C2147F9B3EA9C327694BB691BA8D5361
T =   0E51DC15

						<epsem>, when decrypted:
						03		<service-length>
						30		<full-read>
						0005		<table-id>

 Read response
60 3B					<acse-pdu>
	A2 04				<called-AP-title-element>
		80 02 7B 04		<called-AP-title> = .123.4
	A4 03				<called-AP-invocation-id-element>
		02 01 01			<called-AP-invocation-id> = 1
	A6 05				<calling-AP-title-element>
		80 03 7B C1 75	<calling-AP-title> = .123.8437
	A8 03				<calling-AP-invocation-id-element>
		02 01 02			<calling-AP-invocation-id> = 2
	BE 22				<user-information-element>
		28 20			<user-information-external>
			81 1E		<user-information-octet-string>
				88		<epsem-control> SECURITY_MODE = 2
				8A E2 91 7E 92 A9 77 E4 A2 B6 3E 55		Encrypted payload
				23 0A B7 B4 4B 0A 70 21 07 63 6B E4 5F		Encrypted payload
				DB 4C 2D B4	<mac>
N =   A20C060A607C86F7540116007B04A403
      020101A803020102BE222820811E88A6
      0D060B607C86F7540116007BC1750248
      F3CABD80000000000000000000000000
Tag = 6F5AD2095A8AE1B5861F53A39855678E
C =   8AE2917E92A977E4A2B63E55230AB7B4
      4B0A702107636BE45F80000000000000
Tag = B416FFBD91B8148A57C38075E4979FCA
T =   DB4C2DB4

						<epsem>, when decrypted:
						18		<service-length>
						00		<ok>
						0014		<count>
						4445564943452049442020202020202020202020
						43		<cksum>

 Logoff request
60 1F					<acse-pdu>
	A2 05				<called-AP-title-element>
		80 03 7B C1 75	<called-AP-title> = .123.8437
	A6 04				<calling-AP-title-element>
		80 02 7B 04		<calling-AP-title> .123.4
	A8 03				<calling-AP-invocation-id-element>
		02 01 02			<calling-AP-invocation-id> = 2
	BE 0B				<user-information-element>
		28 09			<user-information-external>
			81 07		<user-information-octet-string>
				88		<epsem-control> SECURITY_MODE = 2
				C9 3B			Encrypted payload
				B9 E9 74 72		<mac>
N =   A20D060B607C86F7540116007BC175A8
      03020102BE0B2809810788A60C060A60
      7C86F7540116007B040248F3CABC8000
Tag = 0ECDB72AF9DD68EAD130E155E458D200
C =   C93B8000000000000000000000000000
Tag = B724C3581DE04C68EFA2C394D09965A1
T =   B9E97472

						<epsem>, when decrypted:
						01		<service-length>
						52		<logoff>

 Logoff response
60 24					<acse-pdu>
	A2 04				<called-AP-title-element>
		80 02 7B 04		<called-AP-title> = .123.4
	A4 03				<called-AP-invocation-id-element>
		02 01 02			<called-AP-invocation-id> = 2
	A6 05				<calling-AP-title-element>
		80 03 7B C1 75	<calling-AP-title> = .123.8437
	A8 03				<calling-AP-invocation-id-element>
		02 01 03			<calling-AP-invocation-id> = 3
	BE 0B				<user-information-element>
		28 09			<user-information-external>
			81 07		<user-information-octet-string>
				88		<epsem-control> SECURITY_MODE = 2
				14 54			Encrypted payload
				1C 78 B2 F0		<mac>
N =   A20C060A607C86F7540116007B04A403
      020102A803020103BE0B2809810788A6
      0D060B607C86F7540116007BC1750248
      F3CABD80000000000000000000000000
Tag = 3EDD871457BA6B65E498C6D1B48FC4F7
C =   14548000000000000000000000000000
Tag = 22A535E44C89F56DE35CA7E5F975BC97
T =   1C78B2F0

						<epsem>, when decrypted:
						01		<service-length>
						00		<ok>

5.3.2 Encrypted sessionless
下面的例子由节点”.123.4”发起的无回话事务（sessionless transaction）, 此会话用于读（偏移读）节点”.123.8437”table 1(厂商标识表)的“表序列号”（MFG_SERIAL_NUMBER）字段, 交换消息时包含了一个消息鉴权码并且应用的内容(EPSEM)是被加密的。
 Offset partial read request
60 4F					<acse-pdu>
	A2 05				<called-AP-title-element>
		80 03 7B C1 75	<called-AP-title> = .123.8437
	A6 04				<calling-AP-title-element>
		80 02 7B 04		<calling-AP-title> .123.4
	A8 03				<calling-AP-invocation-id-element>
		02 01 03		<calling-AP-invocation-id> = 3
	AC 0F				<calling-authentication-value-element>
		A2 0D			<calling-authentication-value-external>
			A0 0B		<calling-authentication-value-single-asn1>
				A1 09	<calling-authentication-value-c1222>
					80 01 02	<key-id-element> = 2
					81 04 48 F3 D0 61	<iv-element> = 2008-10-13 22:49:05 UTC
	BE 2A				<user-information-element>
		28 28			<user-information-external>
			81 26		<user-information-octet-string>
				88		<epsem-control> SECURITY_MODE = 2
				D0 71 80 54 4A FA BF 05 0B 09 32 AA	Encrypted payload
				40 A8 38 2E C5 72 C8 C2 F1 BE 5A 6E	Encrypted payload
				1A 1E 6A 06 27 5F C4 BA C3				Encrypted payload
				20 D9 92 C2							<mac>
Network context = 2.16.124.113620.1.22.0
K =   08070605040302010807060504030201
L =   B86D06FD5929DFAAF6BE44CED8939EC3
D =   70DA0DFAB253BF55ED7C899DB1273D01
Q =   E1B41BF564A77EABDAF9133B624E7A02
N =   A20D060B607C86F7540116007BC175A8
      03020103AC0FA20DA00BA10980010281
      0448F3D061BE2A2828812688A60C060A
      607C86F7540116007B040248F3D06180
Tag = 1C1459EA80D87BFCA7ED47A1C9DE60BB
C =   D07180544AFABF050B0932AA40A8382E
      C572C8C2F1BE5A6E1A1E6A06275FC4BA
      C3800000000000000000000000000000
Tag = 3CCDCB2844D4C8801395C010956ECFFE
T =   20D992C2

					when decrypted:
						17		<service-length>
						51		<security>
						50415353574F5244202020202020202020202020
								<password> = “PASSWORD”
						0002		<user-id>
						08		<service-length>
						3F		<pread-offset>
						0001		<tableid>
						000010	<offset>
						0010		<octet-count>

 Offset partial read response
60 48					<acse-pdu>
	A2 04				<called-AP-title-element>
		80 02 7B 04		<called-AP-title> = .123.4
	A4 03				<called-AP-invocation-id-element>
		02 01 03			<called-AP-invocation-id> = 3
	A6 05				<calling-AP-title-element>
		80 03 7B C1 75	<calling-AP-title> = .123.8437
	A8 03				<calling-AP-invocation-id-element>
		02 01 03			<calling-AP-invocation-id> = 3
	AC 0F				<calling-authentication-value-element>
		A2 0D			<calling-authentication-value-external>
			A0 0B		<calling-authentication-value-single-asn1>
				A1 09	<calling-authentication-value-c1222>
					80 01 02				<key-id-element> = 2
					81 04 48 F3 D0 60		<iv-element> = 2008-10-13 22:49:04 UTC
	BE 1E				<user-information-element>
		28 1C			<user-information-external>
			81 1A		<user-information-octet-string>
				88		<epsem-control> SECURITY_MODE = 2
			18 43 71 B3 7C BD 85 44 B1 EA 91 05	Encrypted payload
			30 20 EC 99 AB 5E 63 72 27 			Encrypted payload
				F0 F1 02 C4						<mac>
N =   A20C060A607C86F7540116007B04A403
      020103A803020103AC0FA20DA00BA109
      800102810448F3D060BE1E281C811A88
      A60D060B607C86F7540116007BC17502
      48F3D060800000000000000000000000
Tag = 39531F4567DD7B9384DA8459E1233334
C =   184371B37CBD8544B1EA91053020EC99
      AB5E6372278000000000000000000000
Tag = C9A21D8169E59A96BFACC0A3529E0A00
T =   F0F102C4

					when decrypted:
						14		<service-length>
						00		<ok>
						0010		<count>
						4D414E55464143545552455220534E20	<data>
						92		<cksum>

5.3.3 Encrypted notification
下面的例子是由节点”.123.273”发起过程26的非应答通知到目标节点“.123.2”，通知包含了一个消息鉴权码，通知中包含了一个消息鉴权码并且应用的内容(EPSEM)是被加密的。
 Write request
60 43					<acse-pdu>
	A2 04				<called-AP-title-element>
		80 02 7B 02		<called-AP-title> = .123.2
	A6 05				<calling-AP-title-element>
		80 03 7B 82 11	<calling-AP-title> = .123.273
	A7 03				<calling-AE-qualifier-element>
		02 01 04			NOTIFICATION = TRUE
	A8 03				<calling-AP-invocation-id-element>
		02 01 02			<calling-AP-invocation-id> = 2
	AC 0F				<calling-authentication-value-element>
		A2 0D			<calling-authentication-value-external>
			A0 0B		<calling-authentication-value-single-asn1>
				A1 09	<calling-authentication-value-c1222>
					80 01 02				<key-id-element> = 2
					81 04 48 F3 D2 F8 	<iv-element> = 2008-10-13 23:00:08 UTC
	BE 19				<user-information-element>
		28 17			<user-information-external>
			81 15		<user-information-octet-string>
				9A		<epsem-control> ED_CLASS_INCLUDED = true,
					                SECURITY_MODE = 2, RESPONSE_CONTROL = 2
				34 B7 27 6F 54 06 D2 5D 4E 3A 51 73	Encrypted payload
				1D 88 A5 D9							Encrypted payload
				1B D7 8F 32							<mac>
Network context = 2.16.124.113620.1.22.0
K =   08070605040302010807060504030201
L =   B86D06FD5929DFAAF6BE44CED8939EC3
D =   70DA0DFAB253BF55ED7C899DB1273D01
Q =   E1B41BF564A77EABDAF9133B624E7A02
N =   A20C060A607C86F7540116007B02A703
      020104A803020102AC0FA20DA00BA109
      800102810448F3D2F8BE19281781159A
      A60D060B607C86F7540116007B821102
      48F3D2F8800000000000000000000000
Tag = E61DF9AF96D333E8962A0D4E394BBF0F
C =   34B7276F5406D25D4E3A51731D88A5D9
Tag = FDCA769DFAEC95AAEA3F8C396E0936E9
T =   1BD78F32

					when decrypted:
						54454D50	<ed-class>
						0B		<service-length>
						40		<full-write>
						0007		<tableid>
						0005		<count>
						1A00		PROC
						00		SEQ_NBR
						0200		PARM =
						E4		<cksum>

附录A：远程通信错误信息代码
名称	值(16进制)	备注
Ok	00	请求成功
Err	01	服务拒绝
Sns	02	服务不支持
Isc	03	权限不够
Onp	04	数据无效
Iar	05	非法请求
Bsy	06	费率装置忙
Dnr	07	费率装置未就绪
Dlk	08	数据被冻结，无法索取
Mo	09	需重新握手或登录
Isss	0A	不存在该服务
sme	0B	Security Mechanism Error
uat	0C	Unknown Application Title
nett	0D	Network Time-out
netr	0E	Network Not Reachable
rqtl	0F	Request Too Large
rstl	10	Response Too Large
sgnp	11	Segmentation not possible
sgerr	12	Segmentation error

附录B：鉴权和加密
加密算法采用EAX + AES128：
EAX’.Encrypt takes two arguments:
Input => N: the Cleartext portion of the message;
P: the Plaintext portion of the message;
Output => C: the Ciphertext;
		 T: the message authentication code;

EAX’.Decrypt takes three arguments:
Input => N: the Cleartext;
  C: the Ciphertext;
T: message authentication code;
Output => P: Plaintext;

1.	“APDU全字段”vs “参与计算MAC的部分”：
C12.22 APDU	Canonified Cleartext
60H <elements-length>
[ <aSO-context-element> ]	[ <aSO-context-element> ]
A2H <called-AP-title-length>	A2H <called-AP-title-length>
<universal-aptitle-element>
| <relative-aptitle-element> 	<universal-aptitle-element>
[ <called-AP-invocation-id-element> ]	[ <called-AP-invocation-id-element> ]
[ A6H <calling-AP-title-length>
<universal-aptitle-element>
| <relative-aptitle-element> ]
[ <calling-AE-qualifier-element> ]	[ <calling-AE-qualifier-element> ]
<calling-AP-invocation-id-element>	<calling-AP-invocation-id-element>
[ 8BH <mechanism-name-length>	[ 8BH <mechanism-name-length>
<application-context-oid>.2.1 ]	<application-context-oid>.2.1 ]
[ <calling-authentication-value-element> ]	[ <calling-authentication-value-element> ]
BEH <user-information-external-length>	BEH <user-information-external-length>
28H <user-information-length>	28H <user-information-length>
[ <user-information-indirect-reference> ] 	[ <user-information-indirect-reference> ]
81H <user-information-octet-string-length> 	81H <user-information-octet-string-length>
<epsem-control> 	<epsem-control>
	[ A6H <calling-AP-title-length>
	<universal-aptitle-element> ]
	<key-id>
	<iv>
[<ed-class>] 	[<ed-class>]
<epsem-data>+	<epsem-data>+
[ <padding> ]	[ <padding> ]
1.1 参与计算MAC的部分（tag + element name）
Canonified Cleartext

A1  [ <aSO-context-element> ]
A2  <called-AP-title-length>
<universal-aptitle-element>
A4 [ <called-AP-invocation-id-element> ]


A7 [ <calling-AE-qualifier-element> ]
A8  <calling-AP-invocation-id-element>
8B [<mechanism-name-length>
<application-context-oid>.2.1 ]
AC [ <calling-authentication-value-element> ]
BE <user-information-external-length>
28 <user-information-length>
[ <user-information-indirect-reference> ]
81 <user-information-octet-string-length>
<epsem-control>
A6  [<calling-AP-title-length>
<universal-aptitle-element> ]
<key-id>
<iv>
[<ed-class>]
<epsem-data>+
[ <padding> ]


2.	“APDU全字段” vs “参与计算CipherText + MAC的部分”
C12.22 APDU (as transmitted)	Canonified Cleartext (as processed)
60H <elements-length>
[ <aSO-context-element> ]	[ <aSO-context-element> ]
A2H <called-AP-title-length>	A2H <called-AP-title-length>
<universal-aptitle-element>
| <relative-aptitle-element> 	<universal-aptitle-element>
[ <called-AP-invocation-id-element> ]	[ <called-AP-invocation-id-element> ]
[ A6H <calling-AP-title-length>
<universal-aptitle-element>
| <relative-aptitle-element> ]
[ <calling-AE-qualifier-element> ]	[ <calling-AE-qualifier-element> ]
<calling-AP-invocation-id-element>	<calling-AP-invocation-id-element>
[ 8BH <mechanism-name-length>	[ 8BH <mechanism-name-length>
<application-context-oid>.2.1 ]	<application-context-oid>.2.1 ]
[ <calling-authentication-value-element> ]	[ <calling-authentication-value-element> ]
BEH <user-information-external-length>	BEH <user-information-external-length>
28H <user-information-length>	28H <user-information-length>
[ <user-information-indirect-reference> ] 	[ <user-information-indirect-reference> ]
81H <user-information-octet-string-length> 	81H <user-information-octet-string-length>
<epsem-control> 	<epsem-control>
	[ A6H <calling-AP-title-length>
	<universal-aptitle-element> ]
	<key-id>
	<iv>

	Plaintext (as processed)
[<ed-class>] 	[<ed-class>]
<epsem-data>+	<epsem-data>+
[ <padding> ]	[ <padding> ]
2.1 参与计算CipherText + MAC的部分（tag + element name）
Canonified Cleartext (as processed)

A1 [ <aSO-context-element> ]
A2 <called-AP-title-length>
<universal-aptitle-element>
A4 [ <called-AP-invocation-id-element> ]


A7  [ <calling-AE-qualifier-element> ]
A8  <calling-AP-invocation-id-element>
8B [<mechanism-name-length>
<application-context-oid>.2.1 ]
AC [ <calling-authentication-value-element> ]
BE <user-information-external-length>
28H <user-information-length>
[ <user-information-indirect-reference> ]
81H <user-information-octet-string-length>
<epsem-control>
A6 [ <calling-AP-title-length>
<universal-aptitle-element> ]
<key-id>
<iv>

Plaintext (as processed)
[<ed-class>]
<epsem-data>+
[ <padding> ]

数据模型（ANCI C12.19）
class0，基本配置表
            Table 0 （基本配置表）
            Table 1 （厂商标识表）
			Table 3 （状态表）
			Table 5 （表计标识表）
			Table 7 （发起过程执行表）
			Table 8 （过程执行结果表）
 		标准过程定义
class1，数据源表集
			Table 11 （数据源限制表）
			Table 12 （计量值单元表）
			Table 13 （需量控制表）
			Table 15 （常数表）
			Table 16 （数据源定义表）
class2，寄存器表集
			Table 21 （寄存器限制定义表）
			Table 22 （电量、最大需量数据选择表）
			Table 23 （当前结算周期数据）
			Table 26 （结算数据）
			Table 27 （实时量数据选择表）
			Table 28 （实时量数据表）
class3，显示表集
			Table 31 （显示限制表）
			Table 32 （显示资源表）
			Table 33 （显示列表定义）
class4，安全相关表集
			Table 41 （安全相关限制表）
			Table 42 （密码及密码权限表）
			Table 43 （默认访问控制表）
			Table 44 （访问控制表）
			Table 45 （密钥表）
class5, TOU表集
			Table 50 （TOU限制表）
			Table 51 （TOU实际配置表）
			Table 52 （时钟）
			Table 53 （时间偏移）
			Table 54 （日历表）
			Table 55 （时钟状态）
class6，负荷表集
			Table 60 （负荷限制表）
			Table 61 （负荷实际限制表）
			Table 62 （负荷控制表）
            Table 63 （负荷状态表）
            Table 64 （负荷集1， Load profile set 1）
            Table 65 （负荷集2， Load profile set 2）
            Table 66 （负荷集3，Load profile set 3）
            Table 67 （负荷集4，Load profile set 4）
class7，事件集
			Table 71 （事件实际限制表）
			Table 72 （事件定义表）
			Table 73 （History Log控制表）
			Table 74 （History Log数据表）
			Table 75 （Event Log控制表）
			Table 76 （Event Log数据表）

